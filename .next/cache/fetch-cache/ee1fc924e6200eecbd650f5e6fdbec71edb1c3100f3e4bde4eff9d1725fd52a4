{"kind":"FETCH","data":{"headers":{"access-control-allow-credentials":"true","access-control-allow-headers":"X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version","access-control-allow-methods":"GET,DELETE,PATCH,POST,PUT","access-control-allow-origin":"*","age":"159356","cache-control":"no-cache","cache-status":"\"Next.js\"; hit, \"Netlify Central\"; fwd=miss, \"Netlify Edge\"; fwd=miss","content-encoding":"br","content-type":"text/plain;charset=UTF-8","date":"Tue, 28 May 2024 12:55:17 GMT","netlify-vary":"header=x-nextjs-data|x-next-debug-logging|RSC|Next-Router-State-Tree|Next-Router-Prefetch|Next-Url,cookie=__prerender_bypass|__next_preview_data","server":"Netlify","strict-transport-security":"max-age=31536000; includeSubDomains; preload","transfer-encoding":"chunked","vary":"RSC,Next-Router-State-Tree,Next-Router-Prefetch,Next-Url,Accept-Encoding","x-content-type-options":"nosniff","x-nextjs-date":"Tue, 28 May 2024 12:55:17 GMT","x-nf-request-id":"01HYZM9ST6KNBKDB8X1QNBD8GW"},"body":"[{"$currency_symbol":"EUR","Posting_Title":"Senior Java/Angular Developer - European Institutions – Brussels - Contractor - Relocation package","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:43:43+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"1000","id":"609729000008574067","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Angular","Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-02-06T12:37:28+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bruxelles","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java/Angular Developer - European Institutions – Brussels - Contractor - Relocation package","Number_of_Positions":"1","State":"Bruxelles-Capitale, Région de","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":true,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008574067/Senior-Java-Angular-Developer---European-Institutions-–-Brussels---Contractor---Relocation-package?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Senior Java/Angular Developer for one of the European Institutions in Brussels.","Publish":true,"Modified_Time":"2024-05-14T03:07:47+02:00","No_of_Candidates_Associated":19,"Job_Opening_ID":"ZR_634_JOB","Job_Description":"We are urgently looking for a Senior Java/Angular Developer for one of the European Institutions in Brussels. Candidates need to be fluent in English. EU candidates from abroad are welcome to apply.  Relocation is required. This role is also open for contractors. Interviews will be done through Teams, and travel is not required for the interviews. As a job abroad is a big step and we know it, what can you expect of us? ALL EUROPEAN CAREERS will support and advise you during the whole procedure (assistance with finding an apartment, where to register, opening a bank account, how to request child allowance, etc.) and a relocation package for AEC employees and freelancers. Tasks and Responsibilities: Design and development of component architecture and building blocks; Analysis of user functional and non-functional requirements; Data analysis and data modeling; Corrective and evolutive maintenance of all supportive subsystems, including WebLogic JEE-based web services and Angular/Typescript web page; Provision of quality and security assessments, control tests, evaluations, and service level agreements associated with established Weblogic and Angular infrastructure services; Technical interface between the project leaders and the developers regarding Java/JEE and Angular/Typescript web page technologies; Technical evaluations and review of IS architecture in relation with current and future Weblogic and Angular infrastructure services; Production of technical documentation (i.e. architecture documents, components/building blocks related documents, etc.); Profile: ​ Bachelor or Master degree; +5/+10 years of Java development experience; Excellent knowledge of Angular (Angular, AngularJS, Angular2; Hands on experience with REST; Knowledge/experience with AWS services; Good knowledge of Java/JEE; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java/Angular Developer - European Institutions – Brussels - Relocation package","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:43:56+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":"1000","id":"609729000008574053","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Angular","Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-02-06T12:30:57+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bruxelles","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Java/Angular Developer - European Institutions – Brussels - Relocation package","Number_of_Positions":"1","State":"Bruxelles-Capitale, Région de","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":true,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008574053/Senior-Java-Angular-Developer---European-Institutions-–-Brussels---Relocation-package?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Senior Java/Angular Developer for one of the European Institutions in Brussels","Publish":true,"Modified_Time":"2024-05-08T10:24:31+02:00","No_of_Candidates_Associated":11,"Job_Opening_ID":"ZR_633_JOB","Job_Description":"We are urgently looking for a Senior Java/Angular Developer for one of the European Institutions in Brussels. Candidates need to be fluent in English. EU candidates from abroad are welcome to apply.  Relocation is required. This role is also open for contractors. Interviews will be done through Teams, and travel is not required for the interviews. As a job abroad is a big step and we know it, what can you expect of us? ALL EUROPEAN CAREERS will support and advise you during the whole procedure (assistance with finding an apartment, where to register, opening a bank account, how to request child allowance, etc.) and a relocation package for AEC employees and freelancers. Tasks and Responsibilities: Design and development of component architecture and building blocks; Analysis of user functional and non-functional requirements; Data analysis and data modeling; Corrective and evolutive maintenance of all supportive subsystems, including WebLogic JEE-based web services and Angular/Typescript web page; Provision of quality and security assessments, control tests, evaluations, and service level agreements associated with established Weblogic and Angular infrastructure services; Technical interface between the project leaders and the developers regarding Java/JEE and Angular/Typescript web page technologies; Technical evaluations and review of IS architecture in relation with current and future Weblogic and Angular infrastructure services; Production of technical documentation (i.e. architecture documents, components/building blocks related documents, etc.); Profile: ​ Bachelor or Master degree; +5/+10 years of Java development experience; Excellent knowledge of Angular (Angular, AngularJS, Angular2; Hands on experience with REST; Knowledge/experience with AWS services; Good knowledge of Java/JEE; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Angular Developer - Relocation to Brussels - Relocation package","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:44:13+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":"1000","id":"609729000008574039","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Angular"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-02-06T12:24:21+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bruxelles","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Angular Developer - Relocation to Brussels - Relocation package","Number_of_Positions":"1","State":"Bruxelles-Capitale, Région de","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":true,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008574039/Senior-Angular-Developer---Relocation-to-Brussels---Relocation-package?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Senior Angular Developer for the European Institutions in Brussels, Belgium.","Publish":true,"Modified_Time":"2024-05-12T14:21:52+02:00","No_of_Candidates_Associated":31,"Job_Opening_ID":"ZR_632_JOB","Job_Description":"We are urgently looking for a Senior Angular Developer for the European Institutions in Brussels, Belgium.  Travel is not required for the interviews. EU candidates are welcome to apply. Candidates need to be willing to relocate. A work permit is not provided. This position is open for employees and contractors. Candidates need to be fluent in English. As a job abroad is a big step and we know it, what can you expect of us? ALL EUROPEAN CAREERS will support and advise you during the whole procedure (assistance with finding an apartment, where to register, opening a bank account, how to request child allowance, etc.) and provide a relocation package. Tasks and Responsibilities: ​ Development of front-end website architecture. Design of user interactions on web pages. Development of features to enhance the user experience. Building reusable code for future use. Understanding and implementation of security and data protection. Cross-platform optimisation. Design responsive applications. Design and develop APIs. Participating in the design and creation of scalable software. Maintenance of code integrity and organisation. Writing clean, functional code on the front-end. Compile and analyse data, processes, and codes to troubleshoot problems and identify areas for improvement. Testing and fixing bugs or other coding issues. Profile: Bachelor or Master degree; +8 years of experience in Front-End development; +3 years of experience in Angular (Angular, AngularJS, Angular2, ..), HTML, CSS, Typescript; +3 years of experience in Bootstrap, CSS3, SASS; +2 years of experience in Responsive Design; REST experience is an advantage; Fluent in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java Developer @ European Institutions – Brussels – Relocation package","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:44:32+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":"1000","id":"609729000008574025","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-02-06T12:09:20+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bruxelles","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Java Developer @ European Institutions – Brussels – Relocation package","Number_of_Positions":"1","State":"Bruxelles-Capitale, Région de","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":true,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008574025/Senior-Java-Developer-European-Institutions-–-Brussels-–-Relocation-package?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Senior Java Developer for the European Institutions in Brussels, Belgium.","Publish":true,"Modified_Time":"2024-05-24T18:00:40+02:00","No_of_Candidates_Associated":37,"Job_Opening_ID":"ZR_631_JOB","Job_Description":"We are urgently looking for a Senior Java Developer for the European Institutions in Brussels, Belgium.  Travel is not required for the interviews. EU candidates are welcome to apply. Candidates need to be willing to relocate. A work permit is not provided. This position is open for employees and contractors. Candidates need to be fluent in English. As a job abroad is a big step and we know it, what can you expect of us? ALL EUROPEAN CAREERS will support and advise you during the whole procedure (assistance with finding an apartment, where to register, opening a bank account, how to request child allowance, etc.) and provide a relocation package. Tasks and Responsibilities: ​ Development of back-end website applications; Integration of user-facing elements developed by a front-end developers with server side logic; Implement core business logic; Creation of servers and databases for functionality; Design and implementation of data storage solutions; Understanding and implementation of security and data protection; Optimization of the application for maximum speed and scalability; Design and develop APIs; Participating in the design and creation of scalable software; Writing clean, functional code on the back-end; Write technical documentation; Profile: Bachelor or Master degree; 5 years of experience in Java; 5 years of experience in JEE (EJB, JMS); 5 years of experience in Spring framework (Spring boot, Spring data); 5 years of experience in JPA (Hibernate framework); 5 years of experience in webservices RESTful API or SOAP; Fluent in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Technical Project Manager – Luxembourg - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:45:34+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"6600","id":"609729000008465004","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":null,"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-01-26T10:54:25+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bastogne","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Technical Project Manager – Luxembourg - Contractor","Number_of_Positions":"1","State":"Luxembourg (fr)","Country_2":null,"Country":"Luxembourg","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":true,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008465004/Senior-Technical-Project-Manager-–-Luxembourg---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international institution in Europe, we are looking for a Technical Project Manager – Onsite in Luxembourg with work experience as a Project Manager in the IT field.","Publish":true,"Modified_Time":"2024-02-27T09:43:35+01:00","No_of_Candidates_Associated":12,"Job_Opening_ID":"ZR_625_JOB","Job_Description":"For an international institution in Europe, we are looking for a Technical Project Manager – Onsite in Luxembourg with work experience as a Project Manager in the IT field. Tasks and responsibilities: Project management including proposals for project strategies, planning, definition of tasks and deliverables, review of project deliverables, quality control, risk analysis and management, status reports, problem reporting and management systems, follow up and organization Guide project activities and review deliverables Participate in functional and technical working groups and progress meetings Estimate costs, timescales and resource requirements for the successful completion of each project to agreed terms of reference. Prepare and maintain project and quality plans and tracks activities against the plan, provide regular and accurate reports Monitor costs, timescales and resources used, and take action where these deviate from agreed tolerances. Ensure that delivered systems are implemented within these criteria Manage the change control procedure gaining agreement for revisions to the project from project sponsors Give presentations System management Profile: ​ University degree in Computer Science or in related area Experience AND certificate (PMP, Prince2, PM2, etc.) in Project Management Minimum 5 years of professional experience in IT Minimum 3 years of professional experience in Project Management of computer software construction. Minimum 1 year of professional experience with quality procedures Experience with working in a multi-cultural environment Fluent in English French knowledge is an asset Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java/React/Kubernetes Developer - Hybrid - The Hague - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:45:50+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"1781","id":"609729000008459153","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-01-26T17:12:39+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Den Helder","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java/React/Kubernetes Developer - Hybrid - The Hague - Contractor","Number_of_Positions":"1","State":"Noord-Holland","Country_2":null,"Country":"Netherlands","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":true,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008459153/Senior-Java-React-Kubernetes-Developer---Hybrid---The-Hague---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international institution based in The Hague (Den Haag, Netherlands), we are urgently looking for a Hybrid Senior Java Developer","Publish":true,"Modified_Time":"2024-03-30T05:13:21+01:00","No_of_Candidates_Associated":24,"Job_Opening_ID":"ZR_628_JOB","Job_Description":"For an international institution based in The Hague (Den Haag, Netherlands), we are urgently looking for a Hybrid Senior Java Developer with React and Kubernetes. Travel 1 week to The Hague every 6 weeks! As Senior Java Developer, you will become part of a bigger service, composed by Project Managers, Business Analyst, Solution Architects, Developers and Testers to reinforce this growing team. This position is open for contractors, who would like to commit long-term.  Candidates need to be fluent in English. Workpermit is not provided. Tasks and responsibilities: Contributing to the improvement of the development and build process; Ability to design and develop production grade, enterprise level systems that make extensive use of messaging and microservices; Participate in the Java implementation of a micro-services solution, being able to write backend code in a reliable, fast, scalable, and secure way, satisfying requirements and service level agreements; Write OAUTH authentication mechanisms. Implement validation mechanisms as unit and integration tests; Assistance with deployment and configuration of the system. Setup CI/CD pipelines. Familiarity with Kubernetes/Docker, is assumed; Work comfortably within a team. Follow Scrum procedures and disciplines. Estimate the work to be done upon request; Write technical documentation. Account for secure coding practices, as well as logging and auditing features; Communicate in a clean, concise way, not only to peers but to upper layers when needed; Hands on experience with Git following pull request procedure. Ability to write clean, secure and high quality code; Profile: ​ Bachelor or Master degree; +7 years experience in front-end and back-end development using microservices, Java, Spring Boot, React / Redux and state containers; Experience with React user interface development is considered an asset; Proven and extensive experience in Cloud and Microservices e.g. Docker, Kubernetes, GCP, AWS; Knowledge of security implementations like: OAuth2 / OpenID Connect, TLS, PKCS, Keycloak; Significant experience with cloud deployments (e.g. GCP and Azure), Kubernetes, DevOps and infrastructure engineering; In-depth knowledge of Experience with data storage/manipulation such as: JSON, JsonSchema, XML, XSLT, DTD, SQL, PDF and with SQL and non-SQL databases such as MongoDB or MySQL; Hands-on experience with messaging services e.g. RabbitMQ or Kafka with Business rules engines e.g. Camunda; Skilled in software development in a Kubernetes-based infrastructure, networking policies, LBs, deployment strategies and cluster security; Knowledge of CI/CD pipeline building tools (GibHub, Apache Maven, Jenkins); Experience with APIs such as: REST, OpenAPI, CMIS, STOMP; Ability to create Docker files, write Jenkinsfiles and Helm Charts; Excellent knowledge of English (both written and verbal) is required; Interested: Please send your resume resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Angular Developer - Contractor - Relocation to Brussels - Relocation package","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:46:04+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"1000","id":"609729000008459115","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Angular"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-01-26T17:06:58+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bruxelles","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Angular Developer - Contractor - Relocation to Brussels - Relocation package","Number_of_Positions":"1","State":"Bruxelles-Capitale, Région de","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":true,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008459115/Senior-Angular-Developer---Contractor---Relocation-to-Brussels---Relocation-package?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Senior Angular Developer for the European Institutions in Brussels, Belgium","Publish":true,"Modified_Time":"2024-03-12T11:31:51+01:00","No_of_Candidates_Associated":14,"Job_Opening_ID":"ZR_627_JOB","Job_Description":"We are urgently looking for a Senior Angular Developer for the European Institutions in Brussels, Belgium.  Travel is not required for the interviews. EU candidates are welcome to apply. Candidates need to be willing to relocate. A work permit is not provided. This position is open for contractors. Candidates need to be fluent in English. As a job abroad is a big step and we know it, what can you expect of us? ALL EUROPEAN CAREERS will support and advise you during the whole procedure (assistance with finding an apartment, where to register, opening a bank account, how to request child allowance, etc.) and provide a relocation package. Tasks and Responsibilities: Development of front-end website architecture. Design of user interactions on web pages. Development of features to enhance the user experience. Building reusable code for future use. Understanding and implementation of security and data protection. Cross-platform optimisation. Design responsive applications. Design and develop APIs. Participating in the design and creation of scalable software. Maintenance of code integrity and organisation. Writing clean, functional code on the front-end. Compile and analyse data, processes, and codes to troubleshoot problems and identify areas for improvement. Testing and fixing bugs or other coding issues. Profile: ​ Bachelor or Master degree; +8 years of experience in Front-End development; +3 years of experience in Angular (Angular, AngularJS, Angular2, ..), HTML, CSS, Typescript; +3 years of experience in Bootstrap, CSS3, SASS; +2 years of experience in Responsive Design; REST experience is an advantage; Fluent in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java Developer @ European Institutions – Brussels – Contractor - Relocation package","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:58:36+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"1000","id":"609729000008459067","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-01-26T17:02:32+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bruxelles","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java Developer @ European Institutions – Brussels – Contractor - Relocation package","Number_of_Positions":"1","State":"Bruxelles-Capitale, Région de","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":true,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008459067/Senior-Java-Developer-European-Institutions-–-Brussels-–-Contractor---Relocation-package?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Senior Java Developer for the European Institutions in Brussels, Belgium","Publish":true,"Modified_Time":"2024-05-08T10:25:47+02:00","No_of_Candidates_Associated":25,"Job_Opening_ID":"ZR_626_JOB","Job_Description":"We are urgently looking for a Senior Java Developer for the European Institutions in Brussels, Belgium.  Travel is not required for the interviews. EU candidates are welcome to apply. Candidates need to be willing to relocate. A work permit is not provided. This position is open for contractors. Candidates need to be fluent in English. As a job abroad is a big step and we know it, what can you expect of us? ALL EUROPEAN CAREERS will support and advise you during the whole procedure (assistance with finding an apartment, where to register, opening a bank account, how to request child allowance, etc.) and provide a relocation package. Tasks and Responsibilities: ​ Development of back-end website applications; Integration of user-facing elements developed by a front-end developers with server side logic; Implement core business logic; Creation of servers and databases for functionality; Design and implementation of data storage solutions; Understanding and implementation of security and data protection; Optimization of the application for maximum speed and scalability; Design and develop APIs; Participating in the design and creation of scalable software; Writing clean, functional code on the back-end; Write technical documentation; Profile: Bachelor or Master degree; 5 years of experience in Java; 5 years of experience in JEE (EJB, JMS); 5 years of experience in Spring framework (Spring boot, Spring data); 5 years of experience in JPA (Hibernate framework); 5 years of experience in webservices RESTful API or SOAP; Fluent in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"2x Senior UX/Frontend Developer - Contractor - Angular/Javascript - Relocation to Brussels","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:59:48+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"1000","id":"609729000008384049","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Front-End"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-01-24T05:43:58+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bruxelles","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"2x Senior UX/Frontend Developer - Contractor - Angular/Javascript - Relocation to Brussels","Number_of_Positions":"1","State":"Bruxelles-Capitale, Région de","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":true,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008384049/2x-Senior-UX-Frontend-Developer---Contractor---Angular-Javascript---Relocation-to-Brussels?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Senior UX/Frontend Developer with Angular and Javascript experience for the European Institutions in Brussels","Publish":true,"Modified_Time":"2023-12-13T10:59:48+01:00","No_of_Candidates_Associated":8,"Job_Opening_ID":"ZR_620_JOB","Job_Description":"We are urgently looking for a Senior UX/Frontend Developer with Angular and Javascript experience for the European Institutions in Brussels, Belgium.  Travel is not required for the interviews. EU candidates are welcome to apply. Candidates need to be willing to relocate. A work permit is required. This position is open for contractors and employees. Candidates need to be fluent in English. As a job abroad is a big step and we know it, what can you expect of us? ALL EUROPEAN CAREERS will support and advise you during the whole procedure (assistance with finding an apartment, where to register, opening a bank account, how to request child allowance, etc.) and provide a relocation package. Tasks and responsibilities: Develop and maintain applications in accordance with specifications and technical best practices; Requirements analysis; Create process and data models, draw up technical specifications, build prototypes; Investigate technical solutions which meet a list of requirements and standards; Assist the project manager in making proposals for the definition of tasks, estimates and deliverables; Participate in functional working groups and progress meetings; Develop unit and integration test suites, plans and programs; Define and integrate technological components or applications; Produce technical and user documentation; Assist business users of the system; Assist with deployment and configuration of the system; Take part in application support by investigating issues (3rd level support etc.); Coach and support less skilled developers; Profile: ​ Master Degree or Bachelor degree; +8/+15 years Frontend and UX Development experience; Solid understanding of UX best practices and design systems (such as Material Design); Experience with Angular and UI libraries such as Angular Material or PrimeNG; Experience with REST or GraphQL APIs,  JavaScript and TypeScript, CSS and SASS, npm; Knowledge of Java, Spring Boot and SQL would be a plus; Fluent in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"2x Senior UX/Frontend Developer - Employee - Angular/Javascript - Relocation to Brussels","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:00:01+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":"1000","id":"609729000008384005","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Front-End"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-01-24T05:40:08+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bruxelles","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"2x Senior UX/Frontend Developer - Employee - Angular/Javascript - Relocation to Brussels","Number_of_Positions":"1","State":"Bruxelles-Capitale, Région de","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":true,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008384005/2x-Senior-UX-Frontend-Developer---Employee---Angular-Javascript---Relocation-to-Brussels?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Senior UX/Frontend Developer with Angular and Javascript experience for the European Institutions in Brussels","Publish":true,"Modified_Time":"2024-03-15T14:02:01+01:00","No_of_Candidates_Associated":7,"Job_Opening_ID":"ZR_619_JOB","Job_Description":"We are urgently looking for a Senior UX/Frontend Developer with Angular and Javascript experience for the European Institutions in Brussels, Belgium.  Travel is not required for the interviews. EU candidates are welcome to apply. Candidates need to be willing to relocate. A work permit is required. This position is open for contractors and employees. Candidates need to be fluent in English. As a job abroad is a big step and we know it, what can you expect of us? ​ ALL EUROPEAN CAREERS will support and advise you during the whole procedure (assistance with finding an apartment, where to register, opening a bank account, how to request child allowance, etc.) and provide a relocation package. Tasks and responsibilities: Develop and maintain applications in accordance with specifications and technical best practices; Requirements analysis; Create process and data models, draw up technical specifications, build prototypes; Investigate technical solutions which meet a list of requirements and standards; Assist the project manager in making proposals for the definition of tasks, estimates and deliverables; Participate in functional working groups and progress meetings; Develop unit and integration test suites, plans and programs; Define and integrate technological components or applications; Produce technical and user documentation; Assist business users of the system; Assist with deployment and configuration of the system; Take part in application support by investigating issues (3rd level support etc.); Coach and support less skilled developers; Profile: Master Degree or Bachelor degree; +8/+15 years Frontend and UX Development experience; Solid understanding of UX best practices and design systems (such as Material Design); Experience with Angular and UI libraries such as Angular Material or PrimeNG; Experience with REST or GraphQL APIs,  JavaScript and TypeScript, CSS and SASS, npm; Knowledge of Java, Spring Boot and SQL would be a plus; Fluent in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Drupal Developer - Relocation within Europe","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":"Drpal, SQL, SQLMYSQL, Query, Database","Last_Activity_Time":"2024-04-29T14:18:49+02:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"1000","id":"609729000020362148","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Drupal"],"Date_Opened":"2024-04-29","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2024-04-29T13:38:16+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bruxelles","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Drupal Developer - Relocation within Europe","Number_of_Positions":"1","State":"Bruxelles-Capitale","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000020362148/Senior-Drupal-Developer---Relocation-within-Europe?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For various international institutions in Europe, we are looking for a Senior Drupal Developer","Publish":true,"Modified_Time":"2024-05-24T15:49:23+02:00","No_of_Candidates_Associated":5,"Job_Opening_ID":"ZR_696_JOB","Job_Description":"Join our dynamic international team and embrace the adventure of working abroad! We're seeking enthusiastic and adaptable candidates, who are eager to expand their horizons and gain unparalleled experience in a diverse international environment. This opportunity is ideal for those looking to build a global network and develop professional skills in a multicultural setting. For various international institutions in Europe, we are looking for a Senior Drupal Developer. Candidates need to be willing to relocate within Europe. Candidates need to be fluent in English. A work permit is required, but not provided. This position is long-term and open for contractors. Tasks and Responsibilities: Web site development, management and support; Analyze business processes, and user requirements to establish a backlog for development, interoperability, integration, and better user experience solutions; Contribute to the definition/design of the User Interface (UI) and implement the final design (i.e. \"look-and-feel\") of the User Interface (UI); Analyze requirements, design, and make proposals on the architecture of the application; Contribution to the design, development, implementation, testing and maintenance of tools and applications; Implementation of business user requirements; Contribute to the team reviews of design artifacts, make changes as required and recommend alternative solutions where appropriate; Develop/update technical documentation; Implement the application’s functionalities and web services following user requirements (described in JIRA), the architectural and UI design; Profile: Bachelor's degree in IT or related field +6 years of Drupal development experience; Experience in performing tasks related to Drupal 9 and Drupal 10 environment; Experience with work in Drupal content structuring, storage, access, and presentation elements; Experience in Object Oriented Programming languages; Experience with SQL (MSSQL and MySQL) databases and Query; Fluent in English; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java Developer","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":"Java, framework, Hibernate / JPA, Jira, Atlassian Confluencera, SQL, HTML, CSS, Javascript","Last_Activity_Time":"2024-04-09T09:26:24+02:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"6600","id":"609729000020176032","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2024-04-09","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2024-04-09T08:12:55+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Luxembourg","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java Developer","Number_of_Positions":"1","State":"Luxembourg","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://zurl.to/eS6d?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For one of the international institutions in Luxembourg, we are currently looking for a Senior Java Developer with +8 years of Java experience","Publish":true,"Modified_Time":"2024-05-01T21:56:43+02:00","No_of_Candidates_Associated":12,"Job_Opening_ID":"ZR_695_JOB","Job_Description":"For one of the international institutions in Luxembourg, we are currently looking for a Senior Java Developer with +8 years of Java experience to join our fast-growing team. EU candidates are welcome to apply. Candidates need to be willing to relocate to relocate to Luxembourg. A work permit is not provided. This role is open for employees and contractors. Candidates need to be fluent in English. Tasks and responsibilities: Application design/analysis, component modelling, coding, unit testing, functional testing, documentation and support; Evaluate systems for discrepancies or vulnerabilities; Conduct research to find ways to improve operations; Provide business architecture and systems processing guidance; Took part in the architecture design and implement new Web Services; Management and assistance in testing, deployment and configuration of the IS; Profile: Master's degree in a related field; +8 years of specific expertise in Java; +4 years of experience with MicroServices; Strong experience in Spring framework, Hibernate / JPA; Hands-on experience with Jira, Atlassian Confluencera and SQL; Front-end knowledge in HTML, CSS, Javascript, experience with Angular 2+ is an asset; Cloud knowledge (AWS, Azure) is an asset; Fluency in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Azure DevOps Specialist","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":"Git, Jenkins, Azure Cloud, Ansible, Artifactory, Sonarqube, Openshift, Ansible","Last_Activity_Time":"2024-04-09T08:08:12+02:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"67000","id":"609729000020169007","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Option 1"],"Date_Opened":"2024-04-09","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2024-04-09T07:53:47+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Strasbourg","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"4-5 years","Job_Type":"Contract","Job_Opening_Name":"Azure DevOps Specialist","Number_of_Positions":"1","State":"Grand-Est","Country_2":null,"Country":"France","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://zurl.to/ezT6?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For one of the international institutions in Strasbourg, we are currently looking for an Azure DevOps Specialist with +3 years of DevOps experience to join our fast-growing team.","Publish":true,"Modified_Time":"2024-04-23T11:55:25+02:00","No_of_Candidates_Associated":1,"Job_Opening_ID":"ZR_694_JOB","Job_Description":"For one of the international institutions in Strasbourg, we are currently looking for an Azure DevOps Specialist with +3 years of DevOps experience to join our fast-growing team. EU candidates are welcome to apply. Candidates need to be willing to relocate to relocate to Strasbourg. A work permit is not provided. This role is open for employees and contractors. Candidates need to be fluent in English. Tasks and responsibilities: Develop tools and infrastructures in order to support Build & Deployment activities; Manage, support and improve Build and Deployment pipelines; Effectively implement a DevOps strategy and associated processes. Write, test, and maintain infrastructure code using tools like Terraform or Ansible. Manage and version control infrastructure configurations. Automate infrastructure provisioning and scaling. Profile: +4 years of relevant education (master degree or equivalent), after the secondary school. +6 years of IT professional experience; +3 years of relevant professional experience in a DevOps role, involved in maintaining DevOps tools & platform; Hands-on experience supporting application build and deployment in an Azure Cloud environment; Thorough understanding of the SDLC, and knowledge of Agile methodologies; Knowledge of automation tools used to implement continuous integration and continuous delivery; Working knowledge of known DevOps tools like Git, Jenkins, Ansible, Artifactory, Sonarqube, Openshift; Knowledge of scripting languages (like Groovy); Knowledge on mobile device technologies (React Native, xCode) and Operating systems (Android, iOS) would be advantageous; Fluency in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java Architect - Fully remote - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":"java, javascript, jQuery, css","Last_Activity_Time":"2023-12-13T12:23:01+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"1000","id":"609729000011581001","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java","JavaScript"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-10-31T15:18:48+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bruxelles","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java Architect - Fully remote - Contractor","Number_of_Positions":"1","State":"Bruxelles-Capitale, Région de","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000011581001/Senior-Java-Architect---Fully-remote---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an European institution in Brussels, we are looking for a FULL REMOTE Senior Java Architect with +5 years of Java Architect experience.","Publish":true,"Modified_Time":"2024-05-15T19:07:42+02:00","No_of_Candidates_Associated":30,"Job_Opening_ID":"ZR_655_JOB","Job_Description":"For an European institution in Brussels, we are looking for a FULL REMOTE Senior Java Architect with +5 years of Java Architect experience. Candidates need to have +10/15 years of IT/Java development experience. Work permit is not provided. Candidates need to be fluent in English. This position is also open for employees and contractors, who would like to commit long-term. Candidates need to be based in Europe. Tasks and responsibilities: Architecture and design of new information systems; Review of the architecture of existing systems, regular maintenance and support operations; Development and maintenance of Java Spring MVC monolith applications with JSP and JavaScript/jQuery/CSS frontend implementation; Design of component architecture and building blocks; Analysis of the integration of different information systems; Development and maintenance of software applications and components; Data analysis and data modelling; Coordination of the implementation of the technical architecture; Participation in technical working groups, progress meetings and meetings with users; Technical interface between the project leaders and the developers; Production of software architecture documents; Assistance during relevant parts of testing, analysis, technical documentation, deployment, evaluation, and reporting; Reviewing technical documentation, code reviews and security document reviews; Troubleshoot the technical issues in all environments (production priority one issues); Build and deploy new releases, executing all the necessary steps; Configuring software on local and managed environments; Profile: Bachelor's degree or Master's degree; +10/15 years of IT/Java development experience; +5 years experience in architecture for web information systems, including the design and development based on Java for web applications; +4 years experience in continuous integration tools (e.g., Maven, Gitlab, JUnit); +2 years experience in Oracle PL/SQL; +2 years experience in Spring Framework; Excellent knowledge of architecture best practices and patterns (including cloud usage, webservices); Excellent knowledge of applications design; Excellent knowledge of modelling tools; Excellent knowledge of Object-Oriented Programming languages; Excellent knowledge of Relational Database Management Systems; Excellent knowledge of Java EE technologies and Java application servers; Excellent knowledge of the Spring and Hibernate Frameworks; Excellent knowledge of Agile development methodologies (such as SCRUM, Kanban); Excellent knowledge of test automation tools (e.g., Junit, Selenium/Selenide); Excellent knowledge of code versioning tools (e.g., Git); Good knowledge of Linux as development environment; Good knowledge of Java server-side templating languages (e.g., ThymeLeaf, Apache Tiles, JSP); Good knowledge of front-end frameworks and libraries (e.g., jQuery, Angular); Knowledge of Enterprise Architecture; Knowledge of interoperability technology (e.g., web services SOAP/REST, message-oriented middleware, service-oriented bus, event architecture); Knowledge of data exchange formats (XML/XSD, Json); Fluent in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Solutions Architect - Contractor - FULL REMOTE","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":"Kanban, Scrum, VMWARE, Sparx EA, TOGAF, Microservices architecture","Last_Activity_Time":"2023-12-13T09:44:19+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000010573003","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Architect"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2023-07-26T16:06:34+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Solutions Architect - Contractor - FULL REMOTE","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000010573003/Solutions-Architect---Contractor---FULL-REMOTE?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international organization, we are looking for a FULL REMOTE Solutions Architect with +6 years of experience.","Publish":true,"Modified_Time":"2023-12-22T11:02:08+01:00","No_of_Candidates_Associated":20,"Job_Opening_ID":"ZR_648_JOB","Job_Description":"For an international organization, we are looking for a FULL REMOTE Solutions Architect with +6 years of experience. Candidates need to have strong experience with Sparx EA, Archimate, TOGAF and Microservices architecture. Candidates need to be fluent in English. This position is also open for employees and contractors, who would like to commit long-term. Candidates need to be based in Europe. Successful candidates need to go through European Security Clearance process! Tasks and responsibilities: Lead the Solution Architecture design and programming architectures for code efforts; Provide top level architectural direction and governance that strikes the balance between directing technical decisions towards alignment but not imposing restrictive unchanging standards on development teams; Work closely with Enterprise Architect and analysts in gathering requirements and specifications from clients and users; Determine a project’s scope before developers begin any major by conducting required studies; Define all aspects of development from appropriate technology and workflow to coding standards; Provide technical guidance and coaching to developers and engineers; Provide inputs in development of schedules and test plans, preparation of documentation based on analyst reports, and defining key project milestones; Evaluate potential risk in projects; Advise the project team and the client in areas such as capacity management, contingency planning, environment planning, configuration management and other relevant tasks related to the role; Maintain relevant documents/manuals describing the System and its infrastructure; Review of software cod e and secure code in line with best practices; Profile: Bachelor or Master degree; +8 years of experience in the defined area of expertise, including 6 years as Solution Architect; Ability to understand the IT design models and specifications to be used as a basis for the programming; In depth knowledge of the applicable programming environment considered as being mainstream for the IT project; Strong experience with Sparx EA and Archimate; In depth knowledge of and experience in TOGAF methodology; In depth knowledge of OWASP guidelines for the secure application design; Extensive knowledge in virtualization architecture (VMWARE); Experience in containers platforms and microservices architecture Experience in event driven architecture; Capacity in writing and reviewing technical documentation; Knowledge of interoperability technology (e.g., web services, message oriented middleware, service oriented bus); Experience of the full development lifecycle of complex large scale and multi-user applications; Experience using agile software development methodologies (i.e. Kanban, Scrum and other lean techniques); Excellent written and verbal communication skills; Excellent knowledge of English language (written and verbal); Interested : Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Drupal Developer - Full Remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":"Drupal, HTML, PHP, Java, JavaScrip, Mysql","Last_Activity_Time":"2023-12-13T09:44:36+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000010287016","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Drupal"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2023-06-23T12:29:47+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Drupal Developer - Full Remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://zurl.to/tNYu?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an European Institution , we are urgently looking for an experienced Full remote Senior Drupal Developer.","Publish":true,"Modified_Time":"2024-05-24T15:50:29+02:00","No_of_Candidates_Associated":31,"Job_Opening_ID":"ZR_647_JOB","Job_Description":"For an European Institution , we are urgently looking for an experienced Full remote Senior Drupal Developer.  Candidates need to be based in Europe.  Workpermit is not provided. Candidates need to be fluent in English.  This positions is long-term.  This position is open for contractors, who would like to commit long-term. Tasks and responsibilities: Design and develop Drupal 9 websites and applications based on project requirements; Customize Drupal themes and templates to create visually appealing and user-friendly interfaces; Create and configure Drupal modules to implement custom functionalities and extend core features; Ensure code quality, performance, and security standards are met throughout the development process; Conduct thorough testing and debugging to identify and fix issues and ensure optimal website performance; Perform regular website maintenance, updates, and security patches; Optimize websites for search engine optimization (SEO) and implement best practices for web accessibility; Stay up-to-date with Drupal 9 developments, best practices, and emerging technologies; Collaborate with front-end developers to integrate Drupal with various web technologies; Document technical specifications, system architecture, and code changes; Interaction with the customer, users, and any other project members, e.g. providing information; Profile: ​ Bachelor's degree + 9 years of experience OR Master degree + 5 years of experience; Strong proficiency in Drupal 9 development, including custom module development and theme customization; In-depth knowledge of PHP, HTML, CSS, JavaScript, and related web technologies; Familiarity with MySQL or other relational database; Solid understanding of web development principles, responsive design, and cross-browser compatibility; Experience with version control systems, such as Git; Knowledge of performance optimization techniques and web security best practices; Excellent command of written and verbal English; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Database Administrator - Contractor - Relocation The Hague","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:41:09+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"1781","id":"609729000008930001","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Linux","MySQL","SQL"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-03-01T12:38:26+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Den Helder","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"4-5 years","Job_Type":"Contract","Job_Opening_Name":"Database Administrator - Contractor - Relocation The Hague","Number_of_Positions":"1","State":"Noord-Holland","Country_2":null,"Country":"Netherlands","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008930001/Database-Administrator---Contractor---Relocation-The-Hague?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international institution based in The Hague, we are urgently looking for a Database Administrator","Publish":true,"Modified_Time":"2023-12-13T10:41:09+01:00","No_of_Candidates_Associated":14,"Job_Opening_ID":"ZR_637_JOB","Job_Description":"For an international institution based in The Hague, we are urgently looking for a Database Administrator with +3 years experience in Microsoft and /or Linux based Database Management. Relocation to The Hague is necessary.  Workpermit is not provided. This position is open for contractors, who would like to commit long-term. Tasks and responsibilities: ​ Installing, maintaining, updating, and troubleshooting Database related Middleware related to Microsoft SQL / MySQL / Postgres; Validating Transition Processes to Operations for new Releases; Maintaining the Database environment, including contributing to reporting on the functioning of the Databases; Preparing/implementing possible new technical functions, including ensuring that any change is reflected in the appropriate documentation and ITSM processes; Identifying opportunities for Middleware and Database optimisation and supporting the installation of patches and updates when needed; Identifying needs regarding automation of testing and testing enhancements; Anticipating Database outages by ensuring backups and disaster recovery procedures are tested and validated and responding to reported security violations; Researching, recommending and implementing changes to procedures and systems of the Agency in order to enhance application security; Active monitoring and analysing application access, connectivity and potential threats; Profile: Bachelor or Master degree; Minimum 3 years experience in Microsoft and /or Linux based Database Management; Linux/ MySQL / Postgres; Expertise in SQL Query and Stored Procedure authoring, troubleshooting and refactoring for efficiency; Experience in Installing, Upgrading and Maintaining Independent MSSQL and MSQL Cluster installations; IT Server Administration – Windows/Linux – for MSSQL Server; Backup solutions for Database Solutions and Disaster recovery; Excellent command of English; Interested: Please send your resume to  resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Stack Developer + 3 years of experience - Relocation to Luxembourg - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:43:08+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"L-9205","id":"609729000008784070","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Angular","Java","JavaScript"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-02-21T10:03:48+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Luxembourg","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"4-5 years","Job_Type":"Contract","Job_Opening_Name":"Stack Developer + 3 years of experience - Relocation to Luxembourg - Contractor","Number_of_Positions":"1","State":"Diekirch","Country_2":null,"Country":"Luxembourg","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008784070/Stack-Developer-3-years-of-experience---Relocation-to-Luxembourg---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For one of the international institutions in Luxembourg, we are currently looking for a Full Stack Developer","Publish":true,"Modified_Time":"2024-01-01T04:03:31+01:00","No_of_Candidates_Associated":15,"Job_Opening_ID":"ZR_636_JOB","Job_Description":"For one of the international institutions in Luxembourg, we are currently looking for a Full Stack Developer with +3 years of Full Stackexperience to join our fast-growing team. EU candidates are welcome to apply. Candidates need to be willing to relocate to relocate to Luxembourg. A work permit is not provided. This role is open for employees and contractors. Candidates need to be fluent in English. Tasks and responsibilities: Develop the information system end-to-end including refining its specifications, writing, and testing the code, planning, and implementing releases. Providing the necessary developer documentation for all the artifacts generated Assistance in software or systems architecture evaluation and design decisions. Assistance in systems integration tasks or data transformation tasks Profile: University degree; Minimum 3 years of professional experience as Full Stack developer with following technologies: Java development, Spring/Spring Boot, Angular/JavaScript, MySQL, XML, XSL, Unit Testing; Experience in the following technologies will be appreciated and could be useful in the position: ​ REST, OpenAPI CD/CI (Bamboo, Jenkins) Test automation (Selenium) Semantics and RDF Scrum, uses Jira Git (BitBucket and Github) Asciidoc with Antora Good knowledge of English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Stack Developer + 3 years of experience - Relocation to Luxembourg - Employee","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:43:24+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":"L-9205","id":"609729000008784002","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Angular","Java","JavaScript"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-02-21T09:58:09+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Luxembourg","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"4-5 years","Job_Type":"Full time","Job_Opening_Name":"Stack Developer + 3 years of experience - Relocation to Luxembourg - Employee","Number_of_Positions":"1","State":"Diekirch","Country_2":null,"Country":"Luxembourg","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008784002/Stack-Developer-3-years-of-experience---Relocation-to-Luxembourg---Employee?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For one of the international institutions in Luxembourg, we are currently looking for a Full Stack Developer","Publish":true,"Modified_Time":"2023-12-13T10:43:24+01:00","No_of_Candidates_Associated":16,"Job_Opening_ID":"ZR_635_JOB","Job_Description":"For one of the international institutions in Luxembourg, we are currently looking for a Full Stack Developer with +3 years of Full Stackexperience to join our fast-growing team. EU candidates are welcome to apply. Candidates need to be willing to relocate to relocate to Luxembourg. A work permit is not provided. This role is open for employees and contractors. Candidates need to be fluent in English. Tasks and responsibilities: Develop the information system end-to-end including refining its specifications, writing, and testing the code, planning, and implementing releases. Providing the necessary developer documentation for all the artifacts generated Assistance in software or systems architecture evaluation and design decisions. Assistance in systems integration tasks or data transformation tasks Profile: University degree; Minimum 3 years of professional experience as Full Stack developer with following technologies: Java development, Spring/Spring Boot, Angular/JavaScript, MySQL, XML, XSL, Unit Testing; Experience in the following technologies will be appreciated and could be useful in the position: REST, OpenAPI CD/CI (Bamboo, Jenkins) Test automation (Selenium) Semantics and RDF Scrum, uses Jira Git (BitBucket and Github) Asciidoc with Antora Good knowledge of English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"AI/ML Architect - Contractor - Full Remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:44:50+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000008541032","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Architect"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2023-02-01T05:53:30+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"AI/ML Architect - Contractor - Full Remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008541032/AI-ML-Architect---Contractor---Full-Remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an European Institution in The Hague, we’re currently looking for a Full Remote AI/ML Architect.","Publish":true,"Modified_Time":"2024-04-29T10:37:54+02:00","No_of_Candidates_Associated":9,"Job_Opening_ID":"ZR_630_JOB","Job_Description":"For an European Institution in The Hague, we’re currently looking for a Full Remote AI/ML Architect. As Artificial Intelligence / Machine Learning Architect, you identify and document the as-is situation and provide architecture and ICT management with recommendations on the approach to be taken.  First week, onboarding will take place in the Netherlands. Candidates need to be based in Europe and have a workpermit.  Workpermits are not provided. EU Candidates need to be fluent in English. This position is open for employees and freelancers. Description: Identify and document the as-is situation at the Agency for AI/ML powered solutions; Identify and document requirements applicable; Leverage market trends, best practices and available toolkits/solutions to devise, document and propose an approach for the SDLC of these solutions; Provide architecture and ICT management with recommendations on the approach to be taken; Profile: ​ +3 years of higher education after secondary school (Bachelor or equivalent); +9 years of IT experience on new methods and solutions; +3 projects where AI and specifically ML powered solutions are devised, designed, built and deployed; +3 projects where AI and ML solution governance (policies, SDLC steps, QA work) has been conducted by the consultant; At least one project where data science and predictive analytics have been used; At least one project in a government environment with high security and compliance requirements; Good knowledge of AI and ML methodologies; Good knowledge of AI and ML development/testing/deployment frameworks and toolkits (ex PyTorch, H2O, etc.); Good knowledge of AI and ML data processing steps (data preparation, feature engineering, ML modelling, etc.); Very good level of English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"AI/ML Architect - Employee - Full Remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:45:11+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000008541002","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Architect"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2023-02-01T05:48:15+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"AI/ML Architect - Employee - Full Remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008541002/AI-ML-Architect---Employee---Full-Remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an European Institution in The Hague, we’re currently looking for a Full Remote AI/ML Architect.","Publish":true,"Modified_Time":"2023-12-13T10:45:11+01:00","No_of_Candidates_Associated":12,"Job_Opening_ID":"ZR_629_JOB","Job_Description":"For an European Institution in The Hague, we’re currently looking for a Full Remote AI/ML Architect. As Artificial Intelligence / Machine Learning Architect, you identify and document the as-is situation and provide architecture and ICT management with recommendations on the approach to be taken.  First week, onboarding will take place in the Netherlands. Candidates need to be based in Europe and have a workpermit.  Workpermits are not provided. EU Candidates need to be fluent in English. This position is open for employees and freelancers. Description: Identify and document the as-is situation at the Agency for AI/ML powered solutions; Identify and document requirements applicable; Leverage market trends, best practices and available toolkits/solutions to devise, document and propose an approach for the SDLC of these solutions; Provide architecture and ICT management with recommendations on the approach to be taken; Profile: ​ +3 years of higher education after secondary school (Bachelor or equivalent); +9 years of IT experience on new methods and solutions; +3 projects where AI and specifically ML powered solutions are devised, designed, built and deployed; +3 projects where AI and ML solution governance (policies, SDLC steps, QA work) has been conducted by the consultant; At least one project where data science and predictive analytics have been used; At least one project in a government environment with high security and compliance requirements; Good knowledge of AI and ML methodologies; Good knowledge of AI and ML development/testing/deployment frameworks and toolkits (ex PyTorch, H2O, etc.); Good knowledge of AI and ML data processing steps (data preparation, feature engineering, ML modelling, etc.); Very good level of English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Tester - Contractor - Relocation to Luxembourg","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:00:17+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"6600","id":"609729000008433033","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Testing"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-01-23T12:07:29+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bastogne","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Tester - Contractor - Relocation to Luxembourg","Number_of_Positions":"1","State":"Luxembourg (fr)","Country_2":null,"Country":"Luxembourg","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008433033/Senior-Tester---Contractor---Relocation-to-Luxembourg?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For one of the international institutions in Luxembourg, we are currently looking for Senior Tester with +7 years of test experience in an Azure environment to join our fast-growing team.","Publish":true,"Modified_Time":"2023-12-13T11:00:17+01:00","No_of_Candidates_Associated":10,"Job_Opening_ID":"ZR_618_JOB","Job_Description":"For one of the international institutions in Luxembourg, we are currently looking for Senior Tester with +7 years of test experience in an Azure environment to join our fast-growing team. EU candidates are welcome to apply. Candidates need to be willing to relocate.  A work permit is required. This role is open for employees and contractors. Candidates need to be fluent in English. Tasks and Responsibilities: Coordinates and manages planning of the system and/or acceptance tests, including software securitytesting, within a development or integration project or programme;. Takes responsibility for integrity of testing and acceptance activities and coordinates the execution of these activities; Provides authoritative advice and guidance on any aspect of test planning and execution; Defines and communicates the test strategy for theproject. Manages all test processes, including test plans, resources, costs, timescales, test deliverables and traceability; Manages client relationships with respect to testing matters; Identifies process improvements, and contributes to corporate testing standards and definition of best practice; Profile: ​ Bachelor or Master degree; +7 years relevant Test experience; Planning, design, management, execution and reporting of tests, using appropriate testing tools and techniques and conforming to agreed process standards and industry specific regulations; Testing includes the process of engineering, using and maintaining test ware (test cases, test scripts, test reports, test plans, etc.) to measure and improve the quality of the software being tested; Senior tester experience with designing test scenarios and test cases based on requirements, performing test execution and raising defects; Experience with Azure DevOps incl. Microsoft Test Manager is a key advantage in order to organize and execute all tests; Nice to have is experience with test automation using Katalon Studio or other test automation tools; Fluent in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Tester - Employee - Relocation to Luxembourg","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:00:35+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":"6600","id":"609729000008433001","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Testing"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-01-23T12:02:48+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bastogne","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Tester - Employee - Relocation to Luxembourg","Number_of_Positions":"1","State":"Luxembourg (fr)","Country_2":null,"Country":"Luxembourg","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008433001/Senior-Tester---Employee-Relocation-to-Luxembourg?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For one of the international institutions in Luxembourg, we are currently looking for Senior Tester with +7 years of test experience in an Azure environment to join our fast-growing team.","Publish":true,"Modified_Time":"2023-12-17T00:03:55+01:00","No_of_Candidates_Associated":6,"Job_Opening_ID":"ZR_617_JOB","Job_Description":"For one of the international institutions in Luxembourg, we are currently looking for Senior Tester with +7 years of test experience in an Azure environment to join our fast-growing team. EU candidates are welcome to apply. Candidates need to be willing to relocate.  A work permit is required. This role is open for employees and contractors. Candidates need to be fluent in English. Tasks and Responsibilities: Coordinates and manages planning of the system and/or acceptance tests, including software securitytesting, within a development or integration project or programme;. Takes responsibility for integrity of testing and acceptance activities and coordinates the execution of these activities; Provides authoritative advice and guidance on any aspect of test planning and execution; Defines and communicates the test strategy for theproject. Manages all test processes, including test plans, resources, costs, timescales, test deliverables and traceability; Manages client relationships with respect to testing matters; Identifies process improvements, and contributes to corporate testing standards and definition of best practice; Profile: ​ Bachelor or Master degree; +7 years relevant Test experience; Planning, design, management, execution and reporting of tests, using appropriate testing tools and techniques and conforming to agreed process standards and industry specific regulations; Testing includes the process of engineering, using and maintaining test ware (test cases, test scripts, test reports, test plans, etc.) to measure and improve the quality of the software being tested; Senior tester experience with designing test scenarios and test cases based on requirements, performing test execution and raising defects; Experience with Azure DevOps incl. Microsoft Test Manager is a key advantage in order to organize and execute all tests; Nice to have is experience with test automation using Katalon Studio or other test automation tools; Fluent in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Technical Architect - Contractor - Relocation to Brussels","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:59:21+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"1000","id":"609729000008384141","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Architect"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-01-24T05:59:17+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bruxelles","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Technical Architect - Contractor - Relocation to Brussels","Number_of_Positions":"1","State":"Bruxelles-Capitale, Région de","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008384141/Senior-Technical-Architect---Contractor---Relocation-to-Brussels?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Senior Technical Architect for the European Institutions in Brussels, Belgium","Publish":true,"Modified_Time":"2024-01-04T10:21:20+01:00","No_of_Candidates_Associated":3,"Job_Opening_ID":"ZR_622_JOB","Job_Description":"We are urgently looking for a Senior Technical Architect for the European Institutions in Brussels, Belgium.  Travel is not required for the interviews. EU candidates are welcome to apply. Candidates need to be willing to relocate. A work permit is required. This position is open for contractors and employees. Candidates need to be fluent in English. As a job abroad is a big step and we know it, what can you expect of us? ALL EUROPEAN CAREERS will support and advise you during the whole procedure (assistance with finding an apartment, where to register, opening a bank account, how to request child allowance, etc.) and provide a relocation package. Tasks and responsibilities: Define the software architecture, the components of an application and their interactions; Conduct quality review of the modelling activities done by UML Designer and Application Engineer; Work in strong collaboration with the Business Architect; Responsible for technological mentoring and takes part in implementation, specifically that of critical components; Draw up an architecture by defining the components which are best suited to the functional and technological constraints; Implement the proposed architecture; Impact analysis: measure the impact of technical requirements on the existing system and suggest priorities; Component modelling; Transfer of knowledge to the development team; Monitoring developments; Integrate third-party solution with a system/an application; Profile: ​ Bachelor or University degree; +8 / +15 years of IT work experience; Ability to work on web based or system-to-system applications collaboratively with a team of developers using GIT repositories and Atlassian stack tools (Jira/Confluence/Bamboo/etc.); Experience with data modelling, databases (Oracle) and application architecture/skeleton set-up; Experience with REST APIs, Java, Spring(Boot, MVC), GraphQL, Hibernate; A good understanding of UX best practices, and Angular/Material Design UI frameworks or CSS systems such as SASS to compile style files is a plus; Fluent in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Technical Architect - Employee - Relocation to Brussels","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:59:34+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":"1000","id":"609729000008384095","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Architect"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2023-01-24T05:55:44+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bruxelles","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Technical Architect - Employee - Relocation to Brussels","Number_of_Positions":"1","State":"Bruxelles-Capitale, Région de","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008384095/Senior-Technical-Architect---Employee---Relocation-to-Brussels?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Senior Technical Architect for the European Institutions in Brussels, Belgium","Publish":true,"Modified_Time":"2024-01-04T08:09:22+01:00","No_of_Candidates_Associated":6,"Job_Opening_ID":"ZR_621_JOB","Job_Description":"We are urgently looking for a Senior Technical Architect for the European Institutions in Brussels, Belgium. Travel is not required for the interviews. EU candidates are welcome to apply. Candidates need to be willing to relocate. A work permit is required. This position is open for contractors and employees. Candidates need to be fluent in English. As a job abroad is a big step and we know it, what can you expect of us? ALL EUROPEAN CAREERS will support and advise you during the whole procedure (assistance with finding an apartment, where to register, opening a bank account, how to request child allowance, etc.) and provide a relocation package. Tasks and responsibilities: Define the software architecture, the components of an application and their interactions; Conduct quality review of the modelling activities done by UML Designer and Application Engineer; Work in strong collaboration with the Business Architect; Responsible for technological mentoring and takes part in implementation, specifically that of critical components; Draw up an architecture by defining the components which are best suited to the functional and technological constraints; Implement the proposed architecture; Impact analysis: measure the impact of technical requirements on the existing system and suggest priorities; Component modelling; Transfer of knowledge to the development team; Monitoring developments; Integrate third-party solution with a system/an application; Profile: Bachelor or University degree; +8 / +15 years of IT work experience; Ability to work on web based or system-to-system applications collaboratively with a team of developers using GIT repositories and Atlassian stack tools (Jira/Confluence/Bamboo/etc.); Experience with data modelling, databases (Oracle) and application architecture/skeleton set-up; Experience with REST APIs, Java, Spring(Boot, MVC), GraphQL, Hibernate; A good understanding of UX best practices, and Angular/Material Design UI frameworks or CSS systems such as SASS to compile style files is a plus; Fluent in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Solutions Architect - +6 years of experience - FULL REMOTE - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:57:01+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000008178048","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Architect"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2023-01-04T11:42:46+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Solutions Architect - +6 years of experience - FULL REMOTE - Contractor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008178048/Solutions-Architect---6-years-of-experience---FULL-REMOTE---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international organization, we are looking for a FULL REMOTE Solutions Architect with +6 years of experience.","Publish":true,"Modified_Time":"2024-05-26T08:26:12+02:00","No_of_Candidates_Associated":5,"Job_Opening_ID":"ZR_616_JOB","Job_Description":"For an international organization, we are looking for a FULL REMOTE Solutions Architect with +6 years of experience. Candidates need to have strong experience with Sparx EA, Archimate, TOGAF and Microservices architecture. Candidates need to be fluent in English.  This position is also open for employees and contractors, who would like to commit long-term. Candidates need to be based in Europe.  Successful candidates need to go through European Security Clearance process! Tasks and responsibilities: Lead the Solution Architecture design and programming architectures for code efforts; Provide top level architectural direction and governance that strikes the balance between directing technical decisions towards alignment but not imposing restrictive unchanging standards on development teams; Work closely with Enterprise Architect and analysts in gathering requirements and specifications from clients and users; Determine a project’s scope before developers begin any major by conducting required studies; Define all aspects of development from appropriate technology and workflow to coding standards; Provide technical guidance and coaching to developers and engineers; Provide inputs in development of schedules and test plans, preparation of documentation based on analyst reports, and defining key project milestones; Evaluate potential risk in projects; Advise the project team and the client in areas such as capacity management, contingency planning, environment planning, configuration management and other relevant tasks related to the role; Maintain relevant documents/manuals describing the System and its infrastructure; Review of software cod e and secure code in line with best practices; Profile: ​ Bachelor or Master degree; +8 years of experience in the defined area of expertise, including 6 years as Solution Architect; Ability to understand the IT design models and specifications to be used as a basis for the programming; In depth knowledge of the applicable programming environment considered as being mainstream for the IT project; Strong experience with Sparx EA and Archimate; In depth knowledge of and experience in TOGAF methodology; In depth knowledge of OWASP guidelines for the secure application design; Extensive knowledge in virtualization architecture (VMWARE); Experience in containers platforms and microservices architecture Experience in event driven architecture; Capacity in writing and reviewing technical documentation; Knowledge of interoperability technology (e.g., web services, message oriented middleware, service oriented bus); Experience of the full development lifecycle of complex large scale and multi-user applications; Experience using agile software development methodologies (i.e. Kanban, Scrum and other lean techniques); Excellent written and verbal communication skills; Excellent knowledge of English language (written and verbal); Interested: Please send your resume to: resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Solutions Architect - +6 years of experience - FULL REMOTE","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:57:15+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000008178002","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Architect"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2023-01-04T11:36:26+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Solutions Architect - +6 years of experience - FULL REMOTE","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008178002/Solutions-Architect---6-years-of-experience---FULL-REMOTE?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international organization, we are looking for a FULL REMOTE Solutions Architect with +6 years of experience.","Publish":true,"Modified_Time":"2023-12-13T10:57:15+01:00","No_of_Candidates_Associated":5,"Job_Opening_ID":"ZR_615_JOB","Job_Description":"For an international organization, we are looking for a FULL REMOTE Solutions Architect with +6 years of experience. Candidates need to have strong experience with Sparx EA, Archimate, TOGAF and Microservices architecture. Candidates need to be fluent in English.  This position is also open for employees and contractors, who would like to commit long-term. Candidates need to be based in Europe.  Successful candidates need to go through European Security Clearance process! Tasks and responsibilities: Lead the Solution Architecture design and programming architectures for code efforts; Provide top level architectural direction and governance that strikes the balance between directing technical decisions towards alignment but not imposing restrictive unchanging standards on development teams; Work closely with Enterprise Architect and analysts in gathering requirements and specifications from clients and users; Determine a project’s scope before developers begin any major by conducting required studies; Define all aspects of development from appropriate technology and workflow to coding standards; Provide technical guidance and coaching to developers and engineers; Provide inputs in development of schedules and test plans, preparation of documentation based on analyst reports, and defining key project milestones; Evaluate potential risk in projects; Advise the project team and the client in areas such as capacity management, contingency planning, environment planning, configuration management and other relevant tasks related to the role; Maintain relevant documents/manuals describing the System and its infrastructure; Review of software cod e and secure code in line with best practices; Profile: ​ Bachelor or Master degree; +8 years of experience in the defined area of expertise, including 6 years as Solution Architect; Ability to understand the IT design models and specifications to be used as a basis for the programming; In depth knowledge of the applicable programming environment considered as being mainstream for the IT project; Strong experience with Sparx EA and Archimate; In depth knowledge of and experience in TOGAF methodology; In depth knowledge of OWASP guidelines for the secure application design; Extensive knowledge in virtualization architecture (VMWARE); Experience in containers platforms and microservices architecture Experience in event driven architecture; Capacity in writing and reviewing technical documentation; Knowledge of interoperability technology (e.g., web services, message oriented middleware, service oriented bus); Experience of the full development lifecycle of complex large scale and multi-user applications; Experience using agile software development methodologies (i.e. Kanban, Scrum and other lean techniques); Excellent written and verbal communication skills; Excellent knowledge of English language (written and verbal); Interested: Please send your resume to: resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java Developer - React / Kubernetes - The Hague – Remote / Travel 1 week every 6 weeks-Employee","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:57:28+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000008164073","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2023-01-03T13:20:02+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Java Developer - React / Kubernetes - The Hague – Remote / Travel 1 week every 6 weeks-Employee","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008164073/Senior-Java-Developer---React-Kubernetes---The-Hague-–-Remote-Travel-1-week-every-6-weeks-Employee?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an European Institution in The Hague, we are urgently looking for a Senior Java Developer with React and Kubernetes.","Publish":true,"Modified_Time":"2024-03-19T00:20:12+01:00","No_of_Candidates_Associated":9,"Job_Opening_ID":"ZR_614_JOB","Job_Description":"For an European Institution in The Hague, we are urgently looking for a Senior Java Developer with React and Kubernetes.Candidates need to be willing to work 1 week per 6 weeks on-site in The Hague, the Netherlands. Candidates need to be fluent in English. As candidates need to travel every 6 weeks, candidates need to be based in Europe and have a work permit. This position is also open for contractors, who would like to commit long-term. Tasks and responsibilities: Complete the pertinent Design Document(s) for software development and maintenance; Execute implementation of a high-quality solution that is aligned with the EU Agency’s architecture standards and high-level architecture requirements; Monitoring of application logs to identify and react on exceptions which were not reported as an incident; Commit code to the EU Agency’s GitHub (or any other relevant) code repository; Setting up test environments for the purpose of SC2, SC3 and SC4 maintenance issues; Configure pipelines to run necessary checks to allow for code basic validation; Submit source code and build software according to the EU Agency’s CI/CD processes; Perform all new builds within EU Agency environments, systems and on EU Agency technologies. Checking the completeness (in terms of dependencies) and the Sonar results (in terms of sanity) of the newly developed code; Check the completeness and performance of the automatic tests (followed the automatic build process) of the changed or newly developed code; Acquire and preserve the respective changed or newly developed code within EU Agency premises and code repository; Provide full documentation as defined in the Technical Conditions; Test all software to be delivered according to the testing framework. Package software according to the EU Agency’s requirements and latest guidelines; Profile: ​ Bachelor or Master degree; +7 years experience in front-end and back-end development using microservices, Java, Spring Boot, React / Redux and state containers; Experience with React user interface development is considered an asset; Proven and extensive experience in Cloud and Microservices e.g. Docker, Kubernetes, GCP, AWS; Knowledge of security implementations like: OAuth2 / OpenID Connect, TLS, PKCS, Keycloak; Significant experience with cloud deployments (e.g. GCP and Azure), Kubernetes, DevOps and infrastructure engineering; In-depth knowledge of Experience with data storage/manipulation such as: JSON, JsonSchema, XML, XSLT, DTD, SQL, PDF and with SQL and non-SQL databases such as MongoDB or MySQL; Hands-on experience with messaging services e.g. RabbitMQ or Kafka with Business rules engines e.g. Camunda; Skilled in software development in a Kubernetes-based infrastructure, networking policies, LBs, deployment strategies and cluster security; Knowledge of CI/CD pipeline building tools (GibHub, Apache Maven, Jenkins); Experience with APIs such as: REST, OpenAPI, CMIS, STOMP; Ability to create Docker files, write Jenkinsfiles and Helm Charts; Excellent knowledge of English (both written and verbal) is required; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java Developer - React / Kubernetes - The Hague – Remote / Travel 1 week every 6 weeks- Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T10:57:40+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000008164001","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2023-01-03T13:11:50+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java Developer - React / Kubernetes - The Hague – Remote / Travel 1 week every 6 weeks- Contractor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000008164001/Senior-Java-Developer---React-Kubernetes---The-Hague-–-Remote-Travel-1-week-every-6-weeks--Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an European Institution in The Hague, we are urgently looking for a Senior Java Developer with React and Kubernetes.","Publish":true,"Modified_Time":"2024-03-12T14:34:24+01:00","No_of_Candidates_Associated":21,"Job_Opening_ID":"ZR_613_JOB","Job_Description":"For an European Institution in The Hague, we are urgently looking for a Senior Java Developer with React and Kubernetes.Candidates need to be willing to work 1 week per 6 weeks on-site in The Hague, the Netherlands. Candidates need to be fluent in English. As candidates need to travel every 6 weeks, candidates need to be based in Europe and have a work permit. This position is also open for contractors, who would like to commit long-term. Tasks and responsibilities: Complete the pertinent Design Document(s) for software development and maintenance; Execute implementation of a high-quality solution that is aligned with the EU Agency’s architecture standards and high-level architecture requirements; Monitoring of application logs to identify and react on exceptions which were not reported as an incident; Commit code to the EU Agency’s GitHub (or any other relevant) code repository; Setting up test environments for the purpose of SC2, SC3 and SC4 maintenance issues; Configure pipelines to run necessary checks to allow for code basic validation; Submit source code and build software according to the EU Agency’s CI/CD processes; Perform all new builds within EU Agency environments, systems and on EU Agency technologies. Checking the completeness (in terms of dependencies) and the Sonar results (in terms of sanity) of the newly developed code; Check the completeness and performance of the automatic tests (followed the automatic build process) of the changed or newly developed code; Acquire and preserve the respective changed or newly developed code within EU Agency premises and code repository; Provide full documentation as defined in the Technical Conditions; Test all software to be delivered according to the testing framework. Package software according to the EU Agency’s requirements and latest guidelines; Profile: ​ Bachelor or Master degree; +7 years experience in front-end and back-end development using microservices, Java, Spring Boot, React / Redux and state containers; Experience with React user interface development is considered an asset; Proven and extensive experience in Cloud and Microservices e.g. Docker, Kubernetes, GCP, AWS; Knowledge of security implementations like: OAuth2 / OpenID Connect, TLS, PKCS, Keycloak; Significant experience with cloud deployments (e.g. GCP and Azure), Kubernetes, DevOps and infrastructure engineering; In-depth knowledge of Experience with data storage/manipulation such as: JSON, JsonSchema, XML, XSLT, DTD, SQL, PDF and with SQL and non-SQL databases such as MongoDB or MySQL; Hands-on experience with messaging services e.g. RabbitMQ or Kafka with Business rules engines e.g. Camunda; Skilled in software development in a Kubernetes-based infrastructure, networking policies, LBs, deployment strategies and cluster security; Knowledge of CI/CD pipeline building tools (GibHub, Apache Maven, Jenkins); Experience with APIs such as: REST, OpenAPI, CMIS, STOMP; Ability to create Docker files, write Jenkinsfiles and Helm Charts; Excellent knowledge of English (both written and verbal) is required; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"(Senior) Business Analyst - Contractor - Relocation to Strasbourg - France","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:02:47+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"67000","id":"609729000007925003","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Business Analyst"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-12-19T17:35:15+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Strasbourg","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"(Senior) Business Analyst - Contractor - Relocation to Strasbourg - France","Number_of_Positions":"1","State":"Grand-Est","Country_2":null,"Country":"France","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000007925003/Senior-Business-Analyst---Contractor---Relocation-to-Strasbourg---France?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international institution based in Strasbourg, France, we are urgently looking for a Senior Business Analyst.","Publish":true,"Modified_Time":"2024-05-02T10:48:12+02:00","No_of_Candidates_Associated":9,"Job_Opening_ID":"ZR_612_JOB","Job_Description":"For an international institution based in Strasbourg, France, we are urgently looking for a Senior Business Analyst. As Senior Business Analyst, you will become part of a bigger service, composed by Project Managers, Business Analyst, Solution Architects, Developers and Testers to reinforce this growing team. Candidates need to be fluent in English. Relocation to Strasbourg is necessary.  Workpermit is required. This position is open for contractors, who would like to commit long-term. Tasks and responsibilities: Analysis of the IT functional and non-functional requirements, make sense of the available information and ensures that the project team understands all the details they require. This is to be done according to the applicable methodology and toolset to be used; Collaborate with numerous stakeholders to ensure that their concerns, requirements, and contribution are included in the requirements specification document; Provide input on low level detail design issues and patterns; Conduct business risk analysis; Update traceability matrices; Analyse & define specifications linked to the integration with other applications and/or technological components; Work in collaboration with Enterprise Architect and Solution Architect to design models in a modelling tool based on predefined requirements; Assist with training the administrators and users of the Systems; Profile: Bachelor's degree; Minimum 6 years of experience in IT, including 3 years or more as a Business Analyst; Minimum 2 years of experience in modelling and UML; Substantial experience in Business and IT System analysis, and ability to translate business requirements into IT requirements; Strong experience in the use of modelling and design tools in Business or IT projects (ARIS, EA, etc.); Extensive knowledge and experience in UML; Good knowledge of relational database systems; Ability to apply architectural principles to functional solutions and use of model-based representations to collect, aggregate or disaggregate complex and conflicting information about the business; Good command of English language; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Business Analyst - Azure DevOps / MS Dynamics - Relocation to Amsterdam","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:03:27+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":"28001","id":"609729000007715045","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Business Analyst"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-11-29T10:36:27+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Madrid","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Business Analyst - Azure DevOps / MS Dynamics - Relocation to Amsterdam","Number_of_Positions":"1","State":"Madrid","Country_2":null,"Country":"Spain","Region":null,"Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000007715045/Senior-Business-Analyst---Azure-DevOps-MS-Dynamics---Relocation-to-Amsterdam?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":null,"Publish":true,"Modified_Time":"2024-05-22T00:05:44+02:00","No_of_Candidates_Associated":4,"Job_Opening_ID":"ZR_609_JOB","Job_Description":"For an international institution based in Amsterdam we are urgently looking for a Senior Business Analyst, with experience in Azure DevOps and MS Dynamics. Candidates need to be fluent in English. Relocation to Amsterdam is necessary.  Workpermit is required. This position is open for contractors, who would like to commit long-term. Requirements Tasks and responsibilities: Engaging with Business representatives and users and facilitating workshops to gather requirements and elicit User Stories; Writing User Stories with Detailed Acceptance Criteria, prompting users for additional criteria to ensure accuracy and completeness; Structuring requirements / user stories and proposing the prioritisation of features; Building user journey / navigation; Creating and/or updating mock-ups and wireframes; Testing and playing an active role coordinating and supporting user testing and/or training; Support change management activities as needed; Daily use of Azure DevOps; Profile: Master´s Degree and 8 years' experience as a Business Analyst or a Bachelor´s Degree and 12 years´ experience as a Business Analyst; SAFe Agile certification (or appropriate experience in an Agile working environment); Experience in supporting projects using Microsoft Dynamics CRM, Azure, PowerApps Portal, MS Dynamics 365, MS SharePoint Online and/ or Data analytics technologies Synapse, SQL DWH, Power BI); Experience in working with Azure DevOps or JIRA SDLC; Experience with document management / records management systems; Demonstrable experience of analysing and improving processes for organisations with more than 500 persons or system analysis for a complex IT project (with a complex architectural landscape); Experience working with key users in a fast paced and changing business environment to design and develop software that meets business need; Capacity to work independently to analyse dependencies, find synergies (e.g. when grouping User Stories) and spot any gaps or inconsistencies (missing or erroneous information); Ability to present concisely to technical audiences (architecture) as well as business stakeholders; Capacity to follow guidelines and ensure coherency between business strategies, enterprise architecture and technology directions, policies, standards and practices; Excellent verbal and written communication skills in English (C1 level) to listen to users, explain to scrum team/ and document at an appropriate level; Fluent in English;","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Business Analyst - Azure DevOps / MS Dynamics - Relocation to Amsterdam / Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:03:42+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":"28001","id":"609729000007715003","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Business Analyst"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-11-29T10:34:44+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Madrid","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Business Analyst - Azure DevOps / MS Dynamics - Relocation to Amsterdam / Contractor","Number_of_Positions":"1","State":"Madrid","Country_2":null,"Country":"Spain","Region":null,"Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000007715003/Senior-Business-Analyst---Azure-DevOps-MS-Dynamics---Relocation-to-Amsterdam-Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":null,"Publish":true,"Modified_Time":"2023-12-13T11:03:42+01:00","No_of_Candidates_Associated":0,"Job_Opening_ID":"ZR_608_JOB","Job_Description":"For an international institution based in Amsterdam we are urgently looking for a Senior Business Analyst, with experience in Azure DevOps and MS Dynamics. Candidates need to be fluent in English. Relocation to Amsterdam is necessary.  Workpermit is required. This position is open for contractors, who would like to commit long-term. Requirements Tasks and responsibilities: Engaging with Business representatives and users and facilitating workshops to gather requirements and elicit User Stories; Writing User Stories with Detailed Acceptance Criteria, prompting users for additional criteria to ensure accuracy and completeness; Structuring requirements / user stories and proposing the prioritisation of features; Building user journey / navigation; Creating and/or updating mock-ups and wireframes; Testing and playing an active role coordinating and supporting user testing and/or training; Support change management activities as needed; Daily use of Azure DevOps; Profile: Master´s Degree and 8 years' experience as a Business Analyst or a Bachelor´s Degree and 12 years´ experience as a Business Analyst; SAFe Agile certification (or appropriate experience in an Agile working environment); Experience in supporting projects using Microsoft Dynamics CRM, Azure, PowerApps Portal, MS Dynamics 365, MS SharePoint Online and/ or Data analytics technologies Synapse, SQL DWH, Power BI); Experience in working with Azure DevOps or JIRA SDLC; Experience with document management / records management systems; Demonstrable experience of analysing and improving processes for organisations with more than 500 persons or system analysis for a complex IT project (with a complex architectural landscape); Experience working with key users in a fast paced and changing business environment to design and develop software that meets business need; Capacity to work independently to analyse dependencies, find synergies (e.g. when grouping User Stories) and spot any gaps or inconsistencies (missing or erroneous information); Ability to present concisely to technical audiences (architecture) as well as business stakeholders; Capacity to follow guidelines and ensure coherency between business strategies, enterprise architecture and technology directions, policies, standards and practices; Excellent verbal and written communication skills in English (C1 level) to listen to users, explain to scrum team/ and document at an appropriate level; Fluent in English;","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"(Senior) Data Scientist - Full Remote - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:03:57+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000007581078","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Database"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-11-22T03:55:14+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"(Senior) Data Scientist - Full Remote - Contractor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000007581078/Senior-Data-Scientist---Full-Remote---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For one project at a European Institution in Belgium, we’re currently looking for a Full Remote (Senior) Data Scientist.","Publish":true,"Modified_Time":"2024-04-15T10:33:50+02:00","No_of_Candidates_Associated":25,"Job_Opening_ID":"ZR_607_JOB","Job_Description":"For one project at a European Institution in Belgium, we’re currently looking for a Full Remote (Senior) Data Scientist. Candidates need to be based in Europe and have a workpermit.  EU Candidates need to be fluent in English. This position is open for employees and freelancers. Tasks and responsibilities: Development and maintenance of software applications in the field of Natural Language Processing (NLP), Machine Learning (ML) and/or Artificial Intelligence (AI); Training of custom machine learning / deep learning models based on structured and unstructured data; Selecting features, building and optimizing classifiers using machine learning techniques; Follow studies and developments aiming at improving the quality of machine translation (MT) engines for each installed language pair; Interact with data stewards and other IT stakeholders to define the data rules; Creating automated anomaly detection systems and constant tracking of its performance; Data mining using state-of-the-art methods; Processing, cleansing, and verifying the integrity of data used for analysis; Design the IT architecture for solutions in the NLP / ML / AI fields, and coordinate its implementation considering master- and meta-data management concepts; Profile: ​ Master Degree in a related field with 11 years of professional experience in IT. +3 years of professional experience in the domain as a Data Scientist; Experience in Machine Learning and Natural Language Processing; Excellent knowledge of Perl, Python, Matlab, R and its NLP/ML libraries (SpaCy, NLTK, scikitlearn, pandas); Good knowledge of SQL tooling (NoSQL DB, MongoDB, Hadoop, SQL); Knowledge of query languages, such as SQL, Hive, Pig, etc and experience with information extraction; Knowledge of NoSQL databases, such as MongoDB, Cassandra, HBase, etc; Knowledge of data visualisation tools, such as D3.js, GGplot, etc; Good knowledge of AWS and/or Azure; Good knowledge of Linux; Good knowledge of Unix and Bash; Excellent knowledge of machine learning techniques and algorithms, such as k-NN, Naive Bayes, SVM, Decision Forests, Neural Network, and/or artificial intelligence frameworks. Knowledge in one of the following areas: predictive (forecasting, recommendation), prescriptive (simulation), sentiment analysis, topic detection, social media crawling and processing, plagiarism detection, trends/anomalies detection in datasets, recommendation systems. Experience in the field of corpus based linguistics; Experience with alignment models and classification methods; Good knowledge of natural language processing systems lifecycle and agile software development methodologies; Fluent in English; Interested: Please forward your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"(Senior) Data Scientist - Full Remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:04:10+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000007581002","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Database"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-11-22T03:46:09+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"(Senior) Data Scientist - Full Remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000007581002/Senior-Data-Scientist---Full-Remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For one project at a European Institution in Belgium, we’re currently looking for a Full Remote (Senior) Data Scientist.","Publish":true,"Modified_Time":"2024-01-31T12:52:44+01:00","No_of_Candidates_Associated":19,"Job_Opening_ID":"ZR_606_JOB","Job_Description":"For one project at a European Institution in Belgium, we’re currently looking for a Full Remote (Senior) Data Scientist. Candidates need to be based in Europe and have a workpermit.  EU Candidates need to be fluent in English. This position is open for employees and freelancers. Tasks and responsibilities: Development and maintenance of software applications in the field of Natural Language Processing (NLP), Machine Learning (ML) and/or Artificial Intelligence (AI); Training of custom machine learning / deep learning models based on structured and unstructured data; Selecting features, building and optimizing classifiers using machine learning techniques; Follow studies and developments aiming at improving the quality of machine translation (MT) engines for each installed language pair; Interact with data stewards and other IT stakeholders to define the data rules; Creating automated anomaly detection systems and constant tracking of its performance; Data mining using state-of-the-art methods; Processing, cleansing, and verifying the integrity of data used for analysis; Design the IT architecture for solutions in the NLP / ML / AI fields, and coordinate its implementation considering master- and meta-data management concepts; Profile: ​ Master Degree in a related field with 11 years of professional experience in IT. +3 years of professional experience in the domain as a Data Scientist; Experience in Machine Learning and Natural Language Processing; Excellent knowledge of Perl, Python, Matlab, R and its NLP/ML libraries (SpaCy, NLTK, scikitlearn, pandas); Good knowledge of SQL tooling (NoSQL DB, MongoDB, Hadoop, SQL); Knowledge of query languages, such as SQL, Hive, Pig, etc and experience with information extraction; Knowledge of NoSQL databases, such as MongoDB, Cassandra, HBase, etc; Knowledge of data visualisation tools, such as D3.js, GGplot, etc; Good knowledge of AWS and/or Azure; Good knowledge of Linux; Good knowledge of Unix and Bash; Excellent knowledge of machine learning techniques and algorithms, such as k-NN, Naive Bayes, SVM, Decision Forests, Neural Network, and/or artificial intelligence frameworks. Knowledge in one of the following areas: predictive (forecasting, recommendation), prescriptive (simulation), sentiment analysis, topic detection, social media crawling and processing, plagiarism detection, trends/anomalies detection in datasets, recommendation systems. Experience in the field of corpus based linguistics; Experience with alignment models and classification methods; Good knowledge of natural language processing systems lifecycle and agile software development methodologies; Fluent in English; Interested: Please forward your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Business Analyst - Relocation - The Hague - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:04:23+01:00","Industry":"Technology","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"1781","id":"609729000007538004","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":null,"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-11-17T02:33:03+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Den Haag","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Business Analyst - Relocation - The Hague - Contractor","Number_of_Positions":"1","State":"Noord-Holland","Country_2":null,"Country":"Netherlands","Region":null,"Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000007538004/Senior-Business-Analyst---Relocation---The-Hague---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international institution based in The Hague (Den Haag, Netherlands), we are urgently looking for a Senior Business Analyst.","Publish":true,"Modified_Time":"2024-05-22T01:43:52+02:00","No_of_Candidates_Associated":23,"Job_Opening_ID":"ZR_605_JOB","Job_Description":"For an international institution based in The Hague (Den Haag, Netherlands), we are urgently looking for a Senior Business Analyst. As Senior Business Analyst, you will become part of a bigger service, composed by Project Managers, Business Analyst, Solution Architects, Developers and Testers to reinforce this growing team. Candidates need to be fluent in English. Relocation to The Hague is necessary.  Workpermit is required. This position is open for contractors, who would like to commit long-term. Requirements Tasks and responsibilities: Identifying business needs, workflows, and processes; Preparing AS IS and TO BE documents; Conducting business analysis, requirements analysis; Support the design and testing phases to ensure that the technical solutions comply with the defined requirements; Follow up and keep up to date different product backlogs; Keep up to date Business Analysis deliverables (Use Cases, User Stories, Impact Assessment Document, etc.); Support the project activities providing clarifications, acting as liaison between the business users/key stakeholders; Participate in the market research/solutions assessment to identify suitable tools to meet the business and technical needs; Support the business users in the testing phase (e.g. support the UAT testing); Writing/reviewing manuals and user guides for the end users; Profile: Bachelor or Master degree; +5 years of relevant professional work experience as a Business Analyst; Experience in ICT projects; Experience working on concurrent projects; Experience in market research for selection of COTs products; Experience in projects with interoperability with other systems is an advantage; Knowledge of Security and Personal data management will be considered as an advantage; Experience working with different methodologies (Agile, Iterations, Waterfall, etc.); Fluent in English; Interested: Please send your resume to  resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java Architect - European Institutions – Relocation to Brussels - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:04:35+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"1000","id":"609729000007381001","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-11-02T12:45:01+01:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bruxelles","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java Architect - European Institutions – Relocation to Brussels - Contractor","Number_of_Positions":"1","State":"Bruxelles-Capitale, Région de","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000007381001/Senior-Java-Architect---European-Institutions-–-Relocation-to-Brussels---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Senior Java Architect for one of the European Institutions in Brussels.","Publish":true,"Modified_Time":"2023-12-13T11:04:35+01:00","No_of_Candidates_Associated":6,"Job_Opening_ID":"ZR_604_JOB","Job_Description":"We are urgently looking for a Senior Java Architect for one of the European Institutions in Brussels.Candidates need to be fluent in English. EU candidates from abroad are welcome to apply. Interviews will be done through Teams, and travel is not required for the interviews. Relocation is required. This role is also open for contractors. As a job abroad is a big step and we know it, what can you expect of us? ALL EUROPEAN CAREERS will support and advise you during the whole procedure (assistance with finding an apartment, where to register, opening a bank account, how to request child allowance, etc.). Tasks and responsibilities: Define JAVA software architectures for applications, taking into account infrastructure and security constraints; Develop software development guidelines and provide coaching to developers; Ensure quality assurance, validating the source code through pool requests; Participate to quality assurance; Develop and maintain critical parts of applications in accordance with specifications and technical best practices; Create process and data models, draw up technical specifications, build prototypes; Investigate technical solutions which meet a list of requirements and standards; Assist the project manager in making proposals for the definition of tasks, estimates and deliverables; Participate in functional working groups and progress meetings; Develop unit and integration test suites, plans and programs; Define and integrate technological components or applications; Produce technical and architectural documentation; Assist with deployment and configuration of the system, coordinating with the different teams; Coach and support less skilled developers; Profile: ​ Bachelor or Master degree; +8 years of Java Architecture experience; Good experience with: Java, Spring, Spring Boot, Hibernate, Jpa, Spring data, Spring security, maven, Tomcat, Git, Oracle, Linux, Agile (JIRA, Confluence, JUnit, Bamboo), scrum, micro services (Rest), Jwt, Graphql, Intellij; Fluency in English. Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior .NET Cloud Developer - The Netherlands - Remote - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:04:45+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000007248106","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":[".NET"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-10-25T09:43:17+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior .NET Cloud Developer - The Netherlands - Remote - Contractor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000007248106/Senior-NET-Cloud-Developer---The-Netherlands---Remote---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international institution based in The Hague (Den Haag, Netherlands), we are looking for a Senior .NET Developer","Publish":true,"Modified_Time":"2024-05-24T22:09:27+02:00","No_of_Candidates_Associated":37,"Job_Opening_ID":"ZR_603_JOB","Job_Description":"For an international institution based in The Hague (Den Haag, Netherlands), we are looking for a Senior .NET Developer with Cloud and Kubernetes experience/knowledge. As a Developer, you will become part of a bigger service, composed of Project Managers, Business Analysts, Solution Architects, and Testers to reinforce this growing team. First week of onboarding will be on-site in The Hague.  A work permit is required as occasional travel is required. After onboarding the role will be remote. Candidates need to be fluent in English. Candidates need to be based in Europe.  This position is also open for employees and contractors, who would like to commit long-term. Tasks and responsibilities: Write web frontend code in JavaScript frameworks, as Vue.js or React. Knockout knowledge is a plus; Participate in the .NET implementation of a micro-services solution, being able to write backend code in a reliable, fast, scalable, and secure way, satisfying requirements and service level agreements; Write OAUTH authentication mechanisms. ADFS knowledge is a plus; Implement validation mechanisms as unit and integration tests; Assist with deployment and configuration of the system. Setup CI/CD pipelines within Azure DevOps platform. Familiarity with Kubernetes/Docker, cloud environments and platforms is assumed; Write helm charts and integrate services on Kubernetes environments is a plus; Work comfortably within a team. Follow Scrum procedures and disciplines. Estimate the work to be done upon request; Write technical documentation. Account for secure coding practices, as well as logging and auditing features; Communicate in a clean, concise way, not only to peers but to upper layers when needed; Profile: ​ Bachelor or Master degree; +6 years of working experience in Software Development preferably in .NET; Real experience with highly scalable systems; Good knowledge of Visual Studio and Azure DevOps; Good knowledge of the design and development of web components; Good knowledge of the design and development of back-end components (REST APIs, integrations, micro-services); Good knowledge of software development methodologies (e.g. AGILE); Good knowledge of relational databases, which includes writing average SQL queries; In-depth knowledge of Microsoft .NET (C#), ASP.NET Core; In-depth knowledge on how to design and develop .NET micro-services applications that run on Linux containers with Kubernetes; Good knowledge of at least one JavaScript framework like Vue.js, React or Angular; Good knowledge of OOP paradigms and SOLID principles; Fluent in English; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"(Senior) Java/DevOps Engineer - Contractor - Brussels","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:04:57+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"1000","id":"609729000007097019","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-10-06T06:19:43+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bruxelles","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"(Senior) Java/DevOps Engineer - Contractor - Brussels","Number_of_Positions":"1","State":"Bruxelles-Capitale, Région de","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000007097019/Senior-Java-DevOps-Engineer---Contractor---Brussels?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are looking for an experienced (Senior) Java/DevOps Engineer in Brussels, Belgium with 8 years of experience","Publish":true,"Modified_Time":"2024-02-01T01:22:56+01:00","No_of_Candidates_Associated":12,"Job_Opening_ID":"ZR_602_JOB","Job_Description":"We are looking for an experienced (Senior) Java/DevOps Engineer in Brussels, Belgium with 8 years of experience, a good understanding of the software development lifecycle and automation tools for developing continuous integration and continuous deployment (CI/CD) pipelines . This position is also open for EU candidates need to be fluent in English. All positions are long-term. Work permit and Relocation is required.  Open for freelancers and contractors. Tasks and responsibitilies: ​ Understanding customer requirements and project KPIs; Implementing various development, testing, automation tools, and IT infrastructure; Planning the team structure, activities, and involvement in project management activities; Managing stakeholders and external interfaces; Setting up tools and required infrastructure; Defining and setting development, test, release, update, and support processes for DevOps operation; Have the technical skill to review, verify, and validate the software code developed in the project; Troubleshooting techniques and fixing the code bugs; Monitoring the processes during the entire lifecycle for its adherence and updating or creating new processes for improvement and minimizing the wastage; Encouraging and building automated processes wherever possible; Identifying and deploying CyberSecurity measures by continuously performing vulnerability assessment and risk management; Incidence management and root cause analysis; Coordination and communication within the team and with customers; Selecting and deploying appropriate CI/CD tools; Strive for continuous improvement and build continuous integration, continuous development, and constant deployment pipeline (CI/CD Pipeline); Mentoring and guiding the team members; Monitoring and measuring customer experience and KPIs; Managing periodic reporting on the progress to the management and the customer; Profile: Bachelor or Master Degree; +8 years of professional experience in the field; Understanding of the software development lifecycle; Understanding automation tools for developing continuous integration and continuous deployment (CI/CD) pipelines; Technologies: Java/JEE, JavaScript, PHP, Vaadin, JPA, XML Processing, Rest services; OS: Linux RedHat and/or Debian; platforms: Docker; WebLogic server Tomcat Server; Nexus; CI/CD : GitLab, Githu; Databases: MySQL & Oracle; Fluency in English; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"(Senior) Java/DevOps Engineer - Brussels","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:51:29+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":"1000","id":"609729000007097001","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-10-06T06:15:50+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bruxelles","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"(Senior) Java/DevOps Engineer - Brussels","Number_of_Positions":"1","State":"Bruxelles-Capitale, Région de","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000007097001/Senior-Java-DevOps-Engineer---Brussels?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are looking for an experienced (Senior) Java/DevOps Engineer in Brussels, Belgium with 8 years of experience","Publish":true,"Modified_Time":"2023-12-13T11:51:29+01:00","No_of_Candidates_Associated":5,"Job_Opening_ID":"ZR_601_JOB","Job_Description":"We are looking for an experienced (Senior) Java/DevOps Engineer in Brussels, Belgium with 8 years of experience, a good understanding of the software development lifecycle and automation tools for developing continuous integration and continuous deployment (CI/CD) pipelines . This position is also open for EU candidates need to be fluent in English. All positions are long-term. Work permit and Relocation is required.  Open for freelancers and contractors. Tasks and responsibitilies: ​ Understanding customer requirements and project KPIs; Implementing various development, testing, automation tools, and IT infrastructure; Planning the team structure, activities, and involvement in project management activities; Managing stakeholders and external interfaces; Setting up tools and required infrastructure; Defining and setting development, test, release, update, and support processes for DevOps operation; Have the technical skill to review, verify, and validate the software code developed in the project; Troubleshooting techniques and fixing the code bugs; Monitoring the processes during the entire lifecycle for its adherence and updating or creating new processes for improvement and minimizing the wastage; Encouraging and building automated processes wherever possible; Identifying and deploying CyberSecurity measures by continuously performing vulnerability assessment and risk management; Incidence management and root cause analysis; Coordination and communication within the team and with customers; Selecting and deploying appropriate CI/CD tools; Strive for continuous improvement and build continuous integration, continuous development, and constant deployment pipeline (CI/CD Pipeline); Mentoring and guiding the team members; Monitoring and measuring customer experience and KPIs; Managing periodic reporting on the progress to the management and the customer; Profile: Bachelor or Master Degree; +8 years of professional experience in the field; Understanding of the software development lifecycle; Understanding automation tools for developing continuous integration and continuous deployment (CI/CD) pipelines; Technologies: Java/JEE, JavaScript, PHP, Vaadin, JPA, XML Processing, Rest services; OS: Linux RedHat and/or Debian; platforms: Docker; WebLogic server Tomcat Server; Nexus; CI/CD : GitLab, Githu; Databases: MySQL & Oracle; Fluency in English; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java / Kubernetes Developer - Remote / Travel 1 week every 6 weeks","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:07:49+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000007073087","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-10-04T13:43:20+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Java / Kubernetes Developer - Remote / Travel 1 week every 6 weeks","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000007073087/Senior-Java-Kubernetes-Developer---Remote-Travel-1-week-every-6-weeks?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For one project at a European Institution in the Netherlands, we’re currently looking for a Senior Java Developer","Publish":true,"Modified_Time":"2024-01-12T12:54:00+01:00","No_of_Candidates_Associated":25,"Job_Opening_ID":"ZR_600_JOB","Job_Description":"For one project at a European Institution in the Netherlands, we’re currently looking for a Senior Java Developer to help with the pilot and roll-out of solutions to the local European Institution. Candidates need to be willing to work 1 week per 6 weeks on-site in the Netherlands. EU Candidates need to be fluent in English. This position is open for employees and freelancers. Tasks and Responsibilities: You’ll aid in the role of the software developed and adapt the white version to the national market, performing all activities and providing all deliverables; Provide technical support to the NPO for the execution of the pilot and implementation of solutions; To prepare an application for mobility purposes of reviewing, sharing, and editing documents in a collaboration mode; To collaborate with Front services; Profile: ​ Bachelor or Master degree; +5 years of experience in these tools Java , React, Spring, OpenAPI, REST, JSON, MongoDB, SQL, Microservices, Docker, Kubernetes, GCP, and Camunda; Experience with Front end coding such as: Java, Spring Boot; Experience with the implementation, configuration, adaptation and roll-out of software solutions; Experience with data storage/manipulation such as: JSON, Json Schema, XML, XSLT, DTD, SQL, PDF; Experience with APIs such as: REST, OpenAPI, CMIS, STOMP; Fluent in English (verbal and written); Interested: Please forward your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java / Kubernetes Developer - Remote / Travel 1 week every 6 weeks - Contactor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:08:03+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000007073039","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-10-04T13:38:35+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java / Kubernetes Developer - Remote / Travel 1 week every 6 weeks - Contactor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000007073039/Senior-Java-Kubernetes-Developer---Remote-Travel-1-week-every-6-weeks---Contactor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For one project at a European Institution in the Netherlands, we’re currently looking for a Senior Java Developer","Publish":true,"Modified_Time":"2024-03-05T16:04:20+01:00","No_of_Candidates_Associated":13,"Job_Opening_ID":"ZR_599_JOB","Job_Description":"For one project at a European Institution in the Netherlands, we’re currently looking for a Senior Java Developer to help with the pilot and roll-out of solutions to the local European Institution. Candidates need to be willing to work 1 week per 6 weeks on-site in the Netherlands. EU Candidates need to be fluent in English. This position is open for employees and freelancers. Tasks and Responsibilities: You’ll aid in the role of the software developed and adapt the white version to the national market, performing all activities and providing all deliverables; Provide technical support to the NPO for the execution of the pilot and implementation of solutions; To prepare an application for mobility purposes of reviewing, sharing, and editing documents in a collaboration mode; To collaborate with Front services; Profile: ​ Bachelor or Master degree; +5 years of experience in these tools Java , React, Spring, OpenAPI, REST, JSON, MongoDB, SQL, Microservices, Docker, Kubernetes, GCP, and Camunda; Experience with Front end coding such as: Java, Spring Boot; Experience with the implementation, configuration, adaptation and roll-out of software solutions; Experience with data storage/manipulation such as: JSON, Json Schema, XML, XSLT, DTD, SQL, PDF; Experience with APIs such as: REST, OpenAPI, CMIS, STOMP; Fluent in English (verbal and written); Interested: Please forward your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Full Stack .NET Developer - Full remote - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:08:18+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000006957013","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":[".NET"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-09-26T10:48:51+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Full Stack .NET Developer - Full remote - Contractor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006957013/Senior-Full-Stack-NET-Developer---Full-remote---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international institution we are looking for a Senior Full stack .NET Developer - Full remote.","Publish":true,"Modified_Time":"2024-05-24T22:12:55+02:00","No_of_Candidates_Associated":42,"Job_Opening_ID":"ZR_598_JOB","Job_Description":"For an international institution we are looking for a Senior Full stack .NET Developer - Full remote. Candidates need to be fluent in English. Candidates need to be based in Europe.  A work permit is required as occasional travel is required. This position is also open for contractors, who would like to commit long-term. Candidates need to be able to go to the Netherlands for 1 week for the start-up. Tasks and responsibilities: Design and develop back-end components (REST APIs, microservices) using .NET Core; Write web frontend code in JavaScript frameworks, Vue.js and React; Develop RDBMS schemas and procedures; Use Elasticsearch to accelerate the solutions; Integrate messaging in order to provide asynchronous solutions; Document solutions, describing the overall design, business, architecture and technical information; Use containers to compose and build the solution; Python knowledge using the Django framework is desirable; Participate in the implementation of full stack .NET solutions, being able to identify shortcuts that would accelerate the time to deployment, minimizing the security and reliability impact; Implement validation mechanisms as unit and integration tests for both front-end and back-end code; Work comfortably within a team. Follow SCRUM methodology procedures and disciplines. Estimate the work to be done upon request; Communicate in a clean, concise way, not only to peers but to upper layers when needed; Profile: +5 years of Full Stack .NET Developer experience; Frontend code experience in JavaScript frameworks, Vue.js and React; Knowledge of Kubernetes is desirable; Fluent in English; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Test Analyst - Institutions - Netherlands - Remote - Contractor / Travel 1 week every 3 weeks","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:08:32+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"1011","id":"609729000006950045","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Testing"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-09-22T17:17:06+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Amsterdam","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Test Analyst - Institutions - Netherlands - Remote - Contractor / Travel 1 week every 3 weeks","Number_of_Positions":"1","State":"Noord-Holland","Country_2":null,"Country":"Netherlands","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006950045/Senior-Test-Analyst---Institutions---Netherlands---Remote---Contractor-Travel-1-week-every-3-weeks?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an Institution in The Netherlands, we are urgently looking for a Senior Test Analyst with +9 years","Publish":true,"Modified_Time":"2024-05-08T20:06:58+02:00","No_of_Candidates_Associated":3,"Job_Opening_ID":"ZR_597_JOB","Job_Description":"For an Institution in The Netherlands, we are urgently looking for a Senior Test Analyst with +9 years of experience to support development/deployment of various projects by conducting thorough non-functional performance testing of new /updated GUIs and APIs for relevant applications/services running in (Docker) containers. A significant part of the work consists of designing, executing and reporting of performance test scripts using JMeter following the DevOps “continuous testing principle”. Candidates need to be willing to work 1 week per 3 weeks on-site in The Netherlands.  Candidates need to be fluent in English. A work permit is required. EU Candidates need to be fluent in English.This position is also open for contractors, who would like to commit long-term. Tasks and responsabilities: Development and execution of Performance/Load Testing, Stress Testing, Endurance Testing, Capacity Testing; Definition of performance goals/thresholds/acceptance criteria with related tests; Analysis and reporting on performance test executions identifying performance bottlenecks and advising on improvements; Support in definition/definition of test plans regarding non-functional quality characteristics (e.g. technical security, efficiency or reliability); Non-functional testing of ICT infrastructure and data migration projects; Creation of large and complex test data sets (structured and unstructured data)and management of test data; Support to operational acceptance testing and piloting activities; Identification, re-testing of and reporting on defects; Reporting of test results; Profile ​ Bachelor or Master degree; +9 years of experience in the area of Software Quality Assurance in the role of Technical Test Analyst; +5 years of experience in performance testing of different kinds of systems (web apps, web services, middleware, databases), protocols and technologies (HTTP, REST, gRPC, SOAP, JDBC); +1 year of experience working in Kubernetes environments; Ability to define performance goals/thresholds/acceptance criteria with related tests, based on product conditions, standards and regulations; Good knowledge of C# or JAVA programming language or scripting languages (python, groovy) in the context of performance testing; developing and executing Performance/Load Testing, Stress Testing, Endurance Testing, Capacity Testing; Apache JMeter performance test tool for developing, executing and analysing load test scenarios; containerized environments (Kubernetes) including monitoring tools and Open Tracing; networking, load balancers, firewalls, middleware (like queuing systems) and database; Fluent English language knowledge; Interested: Please send you CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Test Analyst - Institutions - Netherlands - Remote / Travel 1 week every 3 weeks","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:08:45+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":"1011","id":"609729000006950005","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Testing"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-09-22T17:09:02+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Amsterdam","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Test Analyst - Institutions - Netherlands - Remote / Travel 1 week every 3 weeks","Number_of_Positions":"1","State":"Noord-Holland","Country_2":null,"Country":"Netherlands","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006950005/Senior-Test-Analyst---Institutions---Netherlands---Remote-Travel-1-week-every-3-weeks?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an Institution in The Netherlands, we are urgently looking for a Senior Test Analyst with +9 years of experience","Publish":true,"Modified_Time":"2023-12-13T11:08:45+01:00","No_of_Candidates_Associated":3,"Job_Opening_ID":"ZR_596_JOB","Job_Description":"For an Institution in The Netherlands, we are urgently looking for a Senior Test Analyst with +9 years of experience to support development/deployment of various projects by conducting thorough non-functional performance testing of new /updated GUIs and APIs for relevant applications/services running in (Docker) containers. A significant part of the work consists of designing, executing and reporting of performance test scripts using JMeter following the DevOps “continuous testing principle”. Candidates need to be willing to work 1 week per 3 weeks on-site in The Netherlands.  Candidates need to be fluent in English. A work permit is required. EU Candidates need to be fluent in English.This position is also open for contractors, who would like to commit long-term. Tasks and responsabilities: Development and execution of Performance/Load Testing, Stress Testing, Endurance Testing, Capacity Testing; Definition of performance goals/thresholds/acceptance criteria with related tests; Analysis and reporting on performance test executions identifying performance bottlenecks and advising on improvements; Support in definition/definition of test plans regarding non-functional quality characteristics (e.g. technical security, efficiency or reliability); Non-functional testing of ICT infrastructure and data migration projects; Creation of large and complex test data sets (structured and unstructured data)and management of test data; Support to operational acceptance testing and piloting activities; Identification, re-testing of and reporting on defects; Reporting of test results; Profile ​ Bachelor or Master degree; +9 years of experience in the area of Software Quality Assurance in the role of Technical Test Analyst; +5 years of experience in performance testing of different kinds of systems (web apps, web services, middleware, databases), protocols and technologies (HTTP, REST, gRPC, SOAP, JDBC); +1 year of experience working in Kubernetes environments; Ability to define performance goals/thresholds/acceptance criteria with related tests, based on product conditions, standards and regulations; Good knowledge of C# or JAVA programming language or scripting languages (python, groovy) in the context of performance testing; developing and executing Performance/Load Testing, Stress Testing, Endurance Testing, Capacity Testing; Apache JMeter performance test tool for developing, executing and analysing load test scenarios; containerized environments (Kubernetes) including monitoring tools and Open Tracing; networking, load balancers, firewalls, middleware (like queuing systems) and database; Fluent English language knowledge; Interested: Please send you CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"(Senior) Project Manager - Dublin - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:08:56+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"D01","id":"609729000006850028","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":null,"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-09-14T10:25:38+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Dublin 1","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"(Senior) Project Manager - Dublin - Contractor","Number_of_Positions":"1","State":"Leinster","Country_2":null,"Country":"Ireland","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006850028/Senior-Project-Manager---Dublin---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international organization in Dublin, we are urgently looking for a (Senior) Project Manager with experience with large scale Migration projects.","Publish":true,"Modified_Time":"2023-12-13T11:08:56+01:00","No_of_Candidates_Associated":1,"Job_Opening_ID":"ZR_595_JOB","Job_Description":"For an international organization in Dublin, we are urgently looking for a (Senior) Project Manager with experience with large scale Migration projects.  Hospital Environment experience is an advantage. This position is also open for European candidates who are willing to relocate to Dublin. Candidates need to be fluent in English. All positions are long-term. Workpermit is required. Tasks and responsabilities: Leads and manages the risk, quality and progress of ICT projects to organisational standards; Ensures projects are completed on time, on budget, to quality standards, and within agreed scope; Plans and manages the implementation of organisation-wide processes and procedures, tools and techniques for the identification, assessment, and management of risk inherent in the operation of business processes and of potential risks arising from planned ICT- enabled change; Has excellent communication (both written and verbal) and organisational skills which are required to fulfil the role; Being able to clearly and comprehensively demonstrate the level of experience and leadership; Communicating with team members and key stakeholders; Issue identification and resolution; Budgeting plans; Profile: ​ Bachelor or Master degree; 4-6 years of extensive professional experience in their specialised field; Experience of being involved in large scale Migration projects, preferably within a Hospital Environment which are complex and diverse in nature; Have experience of developing detailed test plans for Business Processes in a large scale multi-user environment where change management is of utmost importance to the User; Have considerable experience in working with multiple internal and external stakeholders regarding the successful delivery of organisational change; A working knowledge of Hospital Business processes and Infrastructures as part of the migration of legacy to new Patient Administration Systems is preferable but not essential; Prince2 or PMBOK certification is an advantage; Fluent English; Interested: Please send you CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"(Senior) Project Manager - Dublin","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:09:07+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":"D01","id":"609729000006850004","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":null,"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-09-14T10:19:30+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Dublin 1","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"(Senior) Project Manager - Dublin","Number_of_Positions":"1","State":"Leinster","Country_2":null,"Country":"Ireland","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006850004/Senior-Project-Manager---Dublin?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international organization in Dublin, we are urgently looking for a (Senior) Project Manager with experience with large scale Migration projects.","Publish":true,"Modified_Time":"2024-02-27T09:48:15+01:00","No_of_Candidates_Associated":6,"Job_Opening_ID":"ZR_594_JOB","Job_Description":"For an international organization in Dublin, we are urgently looking for a (Senior) Project Manager with experience with large scale Migration projects.  Hospital Environment experience is an advantage. This position is also open for European candidates who are willing to relocate to Dublin. Candidates need to be fluent in English. All positions are long-term. Workpermit is required. Tasks and responsabilities: Leads and manages the risk, quality and progress of ICT projects to organisational standards; Ensures projects are completed on time, on budget, to quality standards, and within agreed scope; Plans and manages the implementation of organisation-wide processes and procedures, tools and techniques for the identification, assessment, and management of risk inherent in the operation of business processes and of potential risks arising from planned ICT- enabled change; Has excellent communication (both written and verbal) and organisational skills which are required to fulfil the role; Being able to clearly and comprehensively demonstrate the level of experience and leadership; Communicating with team members and key stakeholders; Issue identification and resolution; Budgeting plans; Profile: ​ Bachelor or Master degree; 4-6 years of extensive professional experience in their specialised field; Experience of being involved in large scale Migration projects, preferably within a Hospital Environment which are complex and diverse in nature; Have experience of developing detailed test plans for Business Processes in a large scale multi-user environment where change management is of utmost importance to the User; Have considerable experience in working with multiple internal and external stakeholders regarding the successful delivery of organisational change; A working knowledge of Hospital Business processes and Infrastructures as part of the migration of legacy to new Patient Administration Systems is preferable but not essential; Prince2 or PMBOK certification is an advantage; Fluent English; Interested: Please send you CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Front-End Angular Developer @ European Institutions – Brussels – Relocation package - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:09:19+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"03001","id":"609729000006493133","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Angular"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-08-11T18:07:52+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Alicante","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Front-End Angular Developer @ European Institutions – Brussels – Relocation package - Contractor","Number_of_Positions":"1","State":"Comunidad Valenciana","Country_2":null,"Country":"Spain","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006493133/Senior-Front-End-Angular-Developer-European-Institutions-–-Brussels-–-Relocation-package---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Senior Front-End Angular Developer for the European Institutions in Brussels, Belgium.  Travel is not required for the interviews.","Publish":true,"Modified_Time":"2024-05-12T14:22:24+02:00","No_of_Candidates_Associated":4,"Job_Opening_ID":"ZR_593_JOB","Job_Description":"We are urgently looking for a Senior Front-End Angular Developer for the European Institutions in Brussels, Belgium.  Travel is not required for the interviews. EU candidates are welcome to apply. Candidates need to be willing to relocate. A work permit is required. This position is open for contractors and employees. Candidates need to be fluent in English. As a job abroad is a big step and we know it, what can you expect of us? ALL EUROPEAN CAREERS will support and advise you during the whole procedure (assistance with finding an apartment, where to register, opening a bank account, how to request child allowance, etc.) and provide a relocation package. Tasks and Responsibilities: ​ Development of front-end website architecture. Design of user interactions on web pages. Development of features to enhance the user experience. Building reusable code for future use. Understanding and implementation of security and data protection. Cross-platform optimisation. Design responsive applications. Design and develop APIs. Participating in the design and creation of scalable software. Maintenance of code integrity and organisation. Writing clean, functional code on the front-end. Compile and analyse data, processes, and codes to troubleshoot problems and identify areas for improvement. Testing and fixing bugs or other coding issues. Profile: Bachelor or Master degree; +5 years of experience in Front-End development; +3 years of experience in Angular, HTML, CSS, Typescript +3 years of experience in Bootstrap, CSS3, SASS +2 years of experience in Web security, authentication and authorization protocols (OAuth, Open ID Connect) +2 years of experience in Responsive Design Fluent in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Front-End Angular Developer @ European Institutions – Brussels – Relocation package","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:09:31+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":"03001","id":"609729000006493093","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Angular"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-08-11T18:00:55+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Alicante","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Permanent","Job_Opening_Name":"Senior Front-End Angular Developer @ European Institutions – Brussels – Relocation package","Number_of_Positions":"1","State":"Comunidad Valenciana","Country_2":null,"Country":"Spain","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006493093/Senior-Front-End-Angular-Developer-European-Institutions-–-Brussels-–-Relocation-package?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Senior Front-End Angular Developer for the European Institutions in Brussels, Belgium.  Travel is not required for the interviews.","Publish":true,"Modified_Time":"2024-04-23T20:36:39+02:00","No_of_Candidates_Associated":5,"Job_Opening_ID":"ZR_592_JOB","Job_Description":"We are urgently looking for a Senior Front-End Angular Developer for the European Institutions in Brussels, Belgium.  Travel is not required for the interviews. EU candidates are welcome to apply. Candidates need to be willing to relocate. A work permit is required. This position is open for contractors and employees. Candidates need to be fluent in English. As a job abroad is a big step and we know it, what can you expect of us? ​ ALL EUROPEAN CAREERS will support and advise you during the whole procedure (assistance with finding an apartment, where to register, opening a bank account, how to request child allowance, etc.) and provide a relocation package. Tasks and Responsibilities: Development of front-end website architecture. Design of user interactions on web pages. Development of features to enhance the user experience. Building reusable code for future use. Understanding and implementation of security and data protection. Cross-platform optimisation. Design responsive applications. Design and develop APIs. Participating in the design and creation of scalable software. Maintenance of code integrity and organisation. Writing clean, functional code on the front-end. Compile and analyse data, processes, and codes to troubleshoot problems and identify areas for improvement. Testing and fixing bugs or other coding issues. Profile: Bachelor or Master degree; +5 years of experience in Front-End development; +3 years of experience in Angular, HTML, CSS, Typescript +3 years of experience in Bootstrap, CSS3, SASS +2 years of experience in Web security, authentication and authorization protocols (OAuth, Open ID Connect) +2 years of experience in Responsive Design Fluent in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java Back-End Developer @ European Institutions – Brussels – Relocation package - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:09:54+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"46001","id":"609729000006493047","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-08-11T17:48:36+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Valencia","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java Back-End Developer @ European Institutions – Brussels – Relocation package - Contractor","Number_of_Positions":"1","State":"Valencia","Country_2":null,"Country":"Spain","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006493047/Senior-Java-Back-End-Developer-European-Institutions-–-Brussels-–-Relocation-package---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Senior Java Back-End Developer for the European Institutions in Brussels, Belgium.  Travel is not required for the interviews.","Publish":true,"Modified_Time":"2024-05-24T09:00:47+02:00","No_of_Candidates_Associated":4,"Job_Opening_ID":"ZR_591_JOB","Job_Description":"We are urgently looking for a Senior Java Back-End Developer for the European Institutions in Brussels, Belgium.  Travel is not required for the interviews. EU candidates are welcome to apply. Candidates need to be willing to relocate. A work permit is required. This position is open for contractors and employees. Candidates need to be fluent in English. As a job abroad is a big step and we know it, what can you expect of us? ALL EUROPEAN CAREERS will support and advise you during the whole procedure (assistance with finding an apartment, where to register, opening a bank account, how to request child allowance, etc.) and provide a relocation package. Tasks and Responsibilities: ​ Development of back-end website applications; Integration of user-facing elements developed by a front-end developers with server side logic; Implement core business logic; Creation of servers and databases for functionality; Design and implementation of data storage solutions; Understanding and implementation of security and data protection; Optimization of the application for maximum speed and scalability; Design and develop APIs; Participating in the design and creation of scalable software; Writing clean, functional code on the back-end; Write technical documentation; Profile: Bachelor or Master degree; 5 years of experience in Java; 5 years of experience in JEE (EJB, JMS); 5 years of experience in Spring framework (Spring boot, Spring data); 5 years of experience in JPA (Hibernate framework); 5 years of experience in webservices RESTful API or SOAP; Fluent in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java Back-End Developer @ European Institutions – Brussels – Relocation package","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:10:17+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":"46001","id":"609729000006493001","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-08-11T17:41:37+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Valencia","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Permanent","Job_Opening_Name":"Senior Java Back-End Developer @ European Institutions – Brussels – Relocation package","Number_of_Positions":"1","State":"Valencia","Country_2":null,"Country":"Spain","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006493001/Senior-Java-Back-End-Developer-European-Institutions-–-Brussels-–-Relocation-package?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Senior Java Back-End Developer for the European Institutions in Brussels, Belgium.  Travel is not required for the interviews.","Publish":true,"Modified_Time":"2023-12-20T13:37:41+01:00","No_of_Candidates_Associated":9,"Job_Opening_ID":"ZR_590_JOB","Job_Description":"We are urgently looking for a Senior Java Back-End Developer for the European Institutions in Brussels, Belgium.  Travel is not required for the interviews. EU candidates are welcome to apply. Candidates need to be willing to relocate. A work permit is required. This position is open for contractors and employees. Candidates need to be fluent in English. As a job abroad is a big step and we know it, what can you expect of us? ALL EUROPEAN CAREERS will support and advise you during the whole procedure (assistance with finding an apartment, where to register, opening a bank account, how to request child allowance, etc.) and provide a relocation package. Tasks and Responsibilities: ​ Development of back-end website applications; Integration of user-facing elements developed by a front-end developers with server side logic; Implement core business logic; Creation of servers and databases for functionality; Design and implementation of data storage solutions; Understanding and implementation of security and data protection; Optimization of the application for maximum speed and scalability; Design and develop APIs; Participating in the design and creation of scalable software; Writing clean, functional code on the back-end; Write technical documentation; Profile: Bachelor or Master degree; 5 years of experience in Java; 5 years of experience in JEE (EJB, JMS); 5 years of experience in Spring framework (Spring boot, Spring data); 5 years of experience in JPA (Hibernate framework); 5 years of experience in webservices RESTful API or SOAP; Fluent in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java/React Developer - Full remote - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:10:31+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000006464055","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-08-09T13:56:07+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java/React Developer - Full remote - Contractor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006464055/Senior-Java-React-Developer---Full-remote---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For a European Institution in The Hague, we are currently looking for a Senior Java Developer with React knowledge/experience.","Publish":true,"Modified_Time":"2024-01-11T11:08:15+01:00","No_of_Candidates_Associated":9,"Job_Opening_ID":"ZR_589_JOB","Job_Description":null,"$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java/React Developer - Full remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:10:46+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000006464001","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-08-09T13:51:35+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Java/React Developer - Full remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006464001/Senior-Java-React-Developer---Full-remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For a European Institution in The Hague, we are currently looking for a Senior Java Developer with React knowledge/experience.","Publish":true,"Modified_Time":"2024-04-22T18:45:12+02:00","No_of_Candidates_Associated":17,"Job_Opening_ID":"ZR_588_JOB","Job_Description":"For a European Institution in The Hague, we are currently looking for a Senior Java Developer with React knowledge/experience. Candidates need to be fluent in English. A work permit is required as occasional travel is required. This position is also open for contractors, who would like to commit long-term. Tasks and responsibilities: ​ Software developed and adapt the white version, performing all Activities and providing all Deliverables; Provide local technical support to the NPO for the execution of the pilot and implementation of FO solutions; To prepare An application for mobility purposes of reviewing, sharing, and editing documents in a collaboration mode; To collaborate with Front services; Profile: +5 years of experience in these tools Wildfly, Java EE, React, Spring, OpenAPI, REST, JSON, MongoDB, SQL, Microservices, Docker, Kubernetes, GCP, React, and Camunda; Experience with Front end coding such as Java, Spring Boot; Experience with the implementation, configuration, adaptation, and roll-out of software solutions; Experience with data storage/manipulation such as: JSON, JsonSchema, XML, XSLT, DTD, SQL, PDF; Experience with APIs such as REST, OpenAPI, CMIS, STOMP; Experience with cluster security and security protocols such as OAuth2 / OpenID Connect, TLS, PKCS; Experience with Microservices, Docker, Kubernetes, GCP; Fluent in English; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java  Developer - Full remote - English speaking","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:13:37+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000006437041","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-08-08T10:03:50+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Java  Developer - Full remote - English speaking","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006437041/Senior-Java-Developer---Full-remote---English-speaking?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are looking for a passionate, experienced, dedicated, and organized Full Remote Senior Java Developer to join our European engineering team.","Publish":true,"Modified_Time":"2024-04-22T16:43:21+02:00","No_of_Candidates_Associated":19,"Job_Opening_ID":"ZR_587_JOB","Job_Description":"We are looking for a passionate, experienced, dedicated, and organized Full Remote Senior Java Developer to join our European engineering team. The position requires someone who is adaptable to a changing environment and loves delivering high-quality results in a fast-paced environment. This is a remote role.  EU candidates are welcome to apply. European Residence permit is required. This position is open for contractors and employees. Candidates need to be fluent in English. Travel is not required for the interviews. Tasks and Responsibilities: ​ Design and development of components and building blocks; Analysis of the integration of different information systems; Data analysis and data modeling; Coordination of the implementation of the technical architecture; Participation in technical working groups, progress meetings, and meetings with the users; Definition of testing needs and assistance in the testing; Assistance during relevant parts of testing, analysis, technical documentation, deployment, evaluation, and reporting; Profile: Bachelor or Master degree; +5 years of Java development experience; Good knowledge of Spring; Good knowledge of Hibernate; Fluent in English; Interested: Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java  Developer - Full remote Contractor   - English speaking","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:13:48+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000006437004","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-08-08T06:50:18+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java  Developer - Full remote Contractor   - English speaking","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006437004/Senior-Java-Developer---Full-remote---English-speaking?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are looking for a passionate, experienced, dedicated, and organized Full Remote Senior Java Developer to join our European engineering team.","Publish":true,"Modified_Time":"2024-04-16T10:05:48+02:00","No_of_Candidates_Associated":45,"Job_Opening_ID":"ZR_586_JOB","Job_Description":"We are looking for a passionate, experienced, dedicated, and organized Full Remote Senior Java Developer to join our European engineering team. The position requires someone who is adaptable to a changing environment and loves delivering high-quality results in a fast-paced environment. This is a remote role.  EU candidates are welcome to apply. European Residence permit is required. This position is open for contractors and employees. Candidates need to be fluent in English. Travel is not required for the interviews. Tasks and Responsibilities: Design and development of components and building blocks; Analysis of the integration of different information systems; Data analysis and data modeling; Coordination of the implementation of the technical architecture; Participation in technical working groups, progress meetings, and meetings with the users; Definition of testing needs and assistance in the testing; Assistance during relevant parts of testing, analysis, technical documentation, deployment, evaluation, and reporting; Profile: Bachelor or Master degree; +5 years of Java development experience; Good knowledge of Spring; Good knowledge of Hibernate; Fluent in English; Interested: ​Please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Kafka Specialist - Madrid -Remote - Employee / Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:14:11+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000006307044","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Oracle"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-07-26T06:13:44+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Kafka Specialist - Madrid -Remote - Employee / Contractor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006307044/Senior-Kafka-Specialist---Geneva---On-site---Employee?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an International Institution in Geneva, we are urgently looking for an experienced Senior Kafka Specialist. Candidates need to be fluent in English.","Publish":true,"Modified_Time":"2023-12-13T11:14:11+01:00","No_of_Candidates_Associated":0,"Job_Opening_ID":"ZR_584_JOB","Job_Description":"For an International Institution in Geneva, we are urgently looking for an experienced Senior Kafka Specialist. Candidates need to be fluent in English. This positions is long-term. Work permit not required.  This role is open for employees and contractors. Tasks and responsibilities: ​ Developing Kafka consumer applications and streams to perform 2-way synchronisation (Oracle-Kafka-MongoDB); Extracting data from Oracle to Kafka topics using Kafka Connect and Change Data Capture Performing basic ETL to transform the topics into the correct target structure; Loading transformed data as MongoDB documents; Conversely, doing the synchronization and transformation from MongoDB back to Oracle; Creating the necessary tests to ensure delivered code is working as per requirements; Profile: Bachelor or Master degree; +5 years in Software Development, Linux System Administration or in DevOps capacity; +2 years building and managing solutions using Apache Kafka; Experience in converting monolith applications into microservices architecture; Demonstrated experience using DevOps and CI/CD techniques (Jenkins, GIT, Docker); Able to train development and production teams; Strong knowledge of Kafka components, Kafka security model; Team player with a positive attitude and a solution driven mentality; Fluency in English; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Front-End JavaScript / React Developer - Spanish/English - Remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:15:20+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000006300004","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["JavaScript"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-07-25T15:32:11+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"4-5 years","Job_Type":"Full time","Job_Opening_Name":"Front-End JavaScript / React Developer - Spanish/English - Remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006300004/Front-End-JavaScript-React-Developer---Spanish-English---Remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Full remote Front-End JavaScript / React Developer with good level of Spanish and English.","Publish":true,"Modified_Time":"2024-04-10T10:22:18+02:00","No_of_Candidates_Associated":18,"Job_Opening_ID":"ZR_582_JOB","Job_Description":"We are urgently looking for a Full remote Front-End JavaScript / React Developer with good level of Spanish and English. This position is only for employees. Candidates need to be willing to go to the office in Murcia for max 1 week every 12 weeks. Expenses for that week are being paid by the employer. Tasks and responsibilities: ​ Work with the product engineering lead, engagement leader and other senior project team members or client resources to provide technical solutions through modelling and proof of concepts; Participate in identifying problem areas and defining solutions, able to articulate problems and solutions in non-technical language to stakeholders; Understand interactions and dependencies between software components; Design and develop software solutions to client requirements using efficient, reusable and reliable code; Support the product engineering lead(s) in project set up, execution and key ceremonies including backlog refinement, sprint planning, demos and retrospectives; Support learning and development activities for junior product engineering resources; Profile: +3 years of Front-End technologies; Angular, React and Vue.js, using JavaScript, HTML 5, CSS preprocessors (LESS/SASS); In depth experience of using ES6/ES7 features such as arrow functions, promises and observables; Knowledge of CI/CD frameworks and tooling, e.g. GIT, Jenkins etc; Candidates need to have a good level of Spanish and English; Technologies: JavaScript, ReactJS, VueJS, Angular, HTML5, CSS Offered: Attractive salary package (employees); Career development training; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"(Senior) Salesforce Consultants (Salesforce Developer, Salesforce Architect or Salesforce Administrator) - Full remote - Consultant","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:15:32+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000006038045","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Inside Sales"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-07-05T14:57:53+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"4-5 years","Job_Type":"Full time","Job_Opening_Name":"(Senior) Salesforce Consultants (Salesforce Developer, Salesforce Architect or Salesforce Administrator) - Full remote - Consultant","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006038045/Senior-Salesforce-Consultants-Salesforce-Developer-Salesforce-Architect-or-Salesforce-Administrator---Full-remote---Consultant?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for experienced (Senior) Salesforce Consultants (Salesforce Developer, Salesforce Architect or Salesforce Administrator) - Full remote.","Publish":true,"Modified_Time":"2023-12-13T11:15:32+01:00","No_of_Candidates_Associated":1,"Job_Opening_ID":"ZR_581_JOB","Job_Description":"We are urgently looking for experienced (Senior) Salesforce Consultants (Salesforce Developer, Salesforce Architect or Salesforce Administrator) - Full remote. Candidates need to be fluent in English. This positions is open for contractors or employees. Candidates need to be based in Europe. Are you a Salesforce Developer, Salesforce Architect or Salesforce Administrator and looking for a Full Remote position, then please apply or contact us as soon as possible and let us know which position could interest you. Profile: ​ Bachelor or Master degree; +3/+5 years of experience working on Salesforce implementation projects with end-to-end implementation experience with the Salesforce platform; Excellent understanding of Salesforce technologies, platforms, tools, apps, data management and functionality; Experience with one or more of following is an advantage: Lightning Components, Triggers, Apex Classes, Controllers, Dynamic Components, Components, Apex Batches, Apex Schedulers, Visualforce, Describer, Test Classes, Webservices: SOAP API, RestAPI; Profiles, Roles, OWD, Sharing Rules, Reports, Dashboards, Custom Objects, Standard Objects, Validation Rules, Workflow Rules, Visual Workflow; Salesforce Certified Platform Developer I certification or Salesforce Certified Administrator certification is an advantage; Fluent in English; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"(Senior) Salesforce Consultants (Salesforce Developer, Salesforce Architect or Salesforce Administrator) - Full remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:15:45+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000006038001","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Inside Sales"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-07-05T14:49:17+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"4-5 years","Job_Type":"Full time","Job_Opening_Name":"(Senior) Salesforce Consultants (Salesforce Developer, Salesforce Architect or Salesforce Administrator) - Full remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006038001/Senior-Salesforce-Consultants-Salesforce-Developer-Salesforce-Architect-or-Salesforce-Administrator---Full-remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for experienced (Senior) Salesforce Consultants (Salesforce Developer, Salesforce Architect or Salesforce Administrator) - Full remote","Publish":true,"Modified_Time":"2023-12-13T11:15:45+01:00","No_of_Candidates_Associated":0,"Job_Opening_ID":"ZR_580_JOB","Job_Description":"We are urgently looking for experienced (Senior) Salesforce Consultants (Salesforce Developer, Salesforce Architect or Salesforce Administrator) - Full remote. Candidates need to be fluent in English. This positions is open for contractors or employees. Candidates need to be based in Europe. Are you a Salesforce Developer, Salesforce Architect or Salesforce Administrator and looking for a Full Remote position, then please apply or contact us as soon as possible and let us know which position could interest you. Profile: ​ Bachelor or Master degree; +3/+5 years of experience working on Salesforce implementation projects with end-to-end implementation experience with the Salesforce platform; Excellent understanding of Salesforce technologies, platforms, tools, apps, data management and functionality; Experience with one or more of following is an advantage: Lightning Components, Triggers, Apex Classes, Controllers, Dynamic Components, Components, Apex Batches, Apex Schedulers, Visualforce, Describer, Test Classes, Webservices: SOAP API, RestAPI; Profiles, Roles, OWD, Sharing Rules, Reports, Dashboards, Custom Objects, Standard Objects, Validation Rules, Workflow Rules, Visual Workflow; Salesforce Certified Platform Developer I certification or Salesforce Certified Administrator certification is an advantage; Fluent in English; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"(Senior) Business Architect - Luxembourg - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:16:07+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"L-1111","id":"609729000006007003","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Architect"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-06-30T18:52:08+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Luxembourg","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"(Senior) Business Architect - Luxembourg - Contractor","Number_of_Positions":"1","State":"Luxembourg","Country_2":null,"Country":"Luxembourg","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000006007003/Senior-Business-Architect---Luxembourg---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international institution based in Luxembourg, we are urgently looking for a (Senior) Business Architect.","Publish":true,"Modified_Time":"2023-12-13T11:16:07+01:00","No_of_Candidates_Associated":0,"Job_Opening_ID":"ZR_579_JOB","Job_Description":"For an international institution based in Luxembourg, we are urgently looking for a (Senior) Business Architect.  The objective for the Business Architect is to design the new architectures for the Logistic, Procurement and Administrative projects, mainly Web projects (Portail, Intranet / Internet sites). All projects are based on Microsoft: .NET Core, .NET, SQL Server, MVC, Front end Angular, React with SOA and MVC Architectures. Candidates need to be fluent in English. Work permit is required. This position is open for employees and freelancers, who would like to commit long-term. As soon as the Corona situation allows it, relocation to Luxembourg is necessary. Profile: ​ Bachelor or Master degree; +5 years in on medium/large projects ‐ on the definition of complex architectures for web‐based systems based on Microsoft technologies; Knowledge of major software architectures used in web solutions as micro‐ services architecture, service‐oriented architecture (SOA), Model View Controller (MVC), and others, including Unified Modeling Language (UML) or other modeling techniques and tools; Web technologies, frameworks, data representations and modeling, programming languages, including Single Page Application Frameworks (like Angular or React), HTML5, Bootstrap; Secure development concepts and methods, cybersecurity threats, and counter measures in designing and maintaining e-Business/web applications; System‐to‐System integration techniques and challenges, including EDI/messaging and service‐oriented approaches; Process integration between web portals and backend ERPs in logistic, financial and transportation business flows; Proficiency in English; Interested: If you are interested in this opportunity, please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java/Kubernetes Developer - Full remote - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:16:19+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005860062","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-06-22T10:47:45+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java/Kubernetes Developer - Full remote - Contractor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005860062/Senior-Java-Kubernetes-Developer---Full-remote---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international institution based in The Hague (Den Haag, Netherlands), we are looking for a Senior Java Developer with Cloud and Kubernetes experience/knowledge.","Publish":true,"Modified_Time":"2024-04-12T16:38:52+02:00","No_of_Candidates_Associated":14,"Job_Opening_ID":"ZR_578_JOB","Job_Description":"For an international institution based in The Hague (Den Haag, Netherlands), we are looking for a Senior Java Developer with Cloud and Kubernetes experience/knowledge. As a Developer, you will become part of a bigger service, composed of Project Managers, Business Analysts, Solution Architects, and Testers to reinforce this growing team. Candidates need to be fluent in English. Candidates need to be based in Europe.  A work permit is required as occasional travel is required. This position is also open for employees and contractors, who would like to commit long-term. Tasks and responsibilities Development and test technical environment based on Java technologies such as Wildfly, Java EE, Spring, Apache, Hibernate, JCR, Mule, MySQL CE, and Oracle DB but also modern technologies based on cloud-native application architectures; Microservice architectures deployed through containers in the service mesh on the Kubernetes platform; Develop applications and tools under the guidance and close cooperation with the solution architects; Profile ​ +5 years of Java Development experience; Experience with software development in a Kubernetes-based infrastructure, networking policies, LBs, deployment strategies, and cluster security; Experience with cloud deployments, DevOps, and infrastructure engineering; Experience with Linux and MS Windows-based systems; Cloud automation and infrastructure provisioning; CI/CD pipeline building tools (git, maven, Jenkins); Ability to write Dockerfiles, Jenkinsfiles, and Helm charts; Experience with React user interface development; Fluent in English; Offered A challenging role for an international organization; Attractive salary package or contractor rate; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java/Kubernetes Developer - Full remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:16:39+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005860014","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-06-22T10:38:08+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Java/Kubernetes Developer - Full remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005860014/Senior-Java-Kubernetes-Developer---Full-remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international institution based in The Hague (Den Haag, Netherlands), we are looking for a Senior Java Developer with Cloud and Kubernetes experience/knowledge.","Publish":true,"Modified_Time":"2024-04-22T17:35:52+02:00","No_of_Candidates_Associated":9,"Job_Opening_ID":"ZR_577_JOB","Job_Description":"For an international institution based in The Hague (Den Haag, Netherlands), we are looking for a Senior Java Developer with Cloud and Kubernetes experience/knowledge. As a Developer, you will become part of a bigger service, composed of Project Managers, Business Analysts, Solution Architects, and Testers to reinforce this growing team. Candidates need to be fluent in English. Candidates need to be based in Europe.  A work permit is required as occasional travel is required. This position is also open for employees and contractors, who would like to commit long-term. Tasks and responsibilities Development and test technical environment based on Java technologies such as Wildfly, Java EE, Spring, Apache, Hibernate, JCR, Mule, MySQL CE, and Oracle DB but also modern technologies based on cloud-native application architectures; Microservice architectures deployed through containers in the service mesh on the Kubernetes platform; Develop applications and tools under the guidance and close cooperation with the solution architects; Profile +5 years of Java Development experience; Experience with software development in a Kubernetes-based infrastructure, networking policies, LBs, deployment strategies, and cluster security; Experience with cloud deployments, DevOps, and infrastructure engineering; Experience with Linux and MS Windows-based systems; Cloud automation and infrastructure provisioning; CI/CD pipeline building tools (git, maven, Jenkins); Ability to write Dockerfiles, Jenkinsfiles, and Helm charts; Experience with React user interface development; Fluent in English; Offered ​ A challenging role for an international organization; Attractive salary package or contractor rate; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Business Analyst - English/Spanish - Full Remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:17:08+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005809009","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Business Analyst"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-06-15T17:42:13+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Business Analyst - English/Spanish - Full Remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005809009/Senior-Business-Analyst---English-Spanish---Full-Remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international organization, we are urgently looking for a REMOTE Senior Business Analyst with English and Spanish","Publish":true,"Modified_Time":"2024-01-18T21:55:16+01:00","No_of_Candidates_Associated":10,"Job_Opening_ID":"ZR_575_JOB","Job_Description":"For an international organization, we are urgently looking for a REMOTE Senior Business Analyst with English and Spanish. Knowledge of Medical systems and process or health background is an advantage.  You will be required to facilitate the Analysis workshops and coordinate participation of relevant Business Process Owners (BPO) and the Subject Matter experts (SME). This positions is long-term.  Candidates need to be based in Europe. Tasks and responsibilities: Gather and document business functional requirements from relevant stakeholders and user community; Evaluate existing business processes, anticipate requirements, and identify areas for improvement. Provide inputs to improve business process and data quality; Facilitate Analysis workshops for ongoing reviews of business processes and developing optimization strategies; Gathering critical information from meetings with various stakeholders and producing useful reports; Effectively communicate insights and plans to cross-functional team members and management; Prepare the necessary Documentation and Presentations for various Project workshops; Design/redesign solutions for business functional requirements in consultation with relevant technical and development team; Assist development and technical teams during solution development and monitor and report progress; Prepare end-to-end business scenarios for user testing, compile user test results, and obtain formal sign-off from users on the business solution; Participate in the preparation and implementation of new system releases and participate in Change Management activities to deploy enhancements and/or modifications to the system; Perform such other duties as may be assigned. Profile: Master’s degree in Medical field, Public Administration, Information Technology, or a Social Sciences or a related field from an accredited academic institution; or University degree in the above fields with at least 5 years of relevant professional experience. Strong analytical skills including a thorough understanding of how to interpret customer business needs and translate them into application/ operational requirements. Excellent planning, organizational, and time management skills; Proficient verbal and written communication skills and the ability to interact professionally with a diverse group, executives, managers, and subject matter experts; The ability to influence stakeholders and work closely with them to determine acceptable solutions; Fundamental analytical and conceptual thinking skills; Excellent documentation skills and experience supporting successful projects; Experience creating detailed reports and giving presentations; Certification on PRINCE2 methodology of project management an advantage; Knowledge of Medical systems and process or health background highly desirable; Excellent written and spoken English; Knowledge of a French or Spanish; Interested: Please send your resume to:resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"SailPoint IdentityIQ Support Engineer - Full Remote - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:17:19+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005795001","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["System Engineer"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-06-14T12:40:50+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"4-5 years","Job_Type":"Contract","Job_Opening_Name":"SailPoint IdentityIQ Support Engineer - Full Remote - Contractor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Asia","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005795001/SailPoint-IdentityIQ-Support-Engineer---Full-Remote---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an International institution in Geneva, we are looking for a FULL REMOTE SailPoint IdentityIQ Support Engineer, to provide support for the client’s SailPoint IdentityIQ platform.","Publish":true,"Modified_Time":"2024-01-04T10:22:23+01:00","No_of_Candidates_Associated":5,"Job_Opening_ID":"ZR_574_JOB","Job_Description":"For an International institution in Geneva, we are looking for a FULL REMOTE SailPoint IdentityIQ Support Engineer, to provide support for the client’s SailPoint IdentityIQ platform.  Candidates need to be fluent in English.  This positions is long-term. You will participate in all SailPoint deployment activities such as connector configuration, custom rule development, workflow configuration and development, third party system integration, build and configure reports. Candidates need to be willing to work CET European hours Tasks and responsibilities: ​ Ongoing operational support of SailPoint IdentityIQ platforms, monitoring and troubleshooting; Develop and implement connectors, workflows, forms, rules, policies and reports; Actively participate in application onboarding, role analysis and workflow development activities; Delivers SailPoint based Identity Governance & Administration services: Request Access - Approve - Provision / de-provision Access; User certification / access review; Role / entitlement life cycle management; Develop and implement connectors, workflows, forms, rules, policies and report; Designs and implements Microsoft Azure Infrastructure: Design Identity, Governance, and Monitoring Solutions; Design Data Storage Solutions; Design Business Continuity Solutions; Design Infrastructure Solutions; Liaise with the information security team to review the integration of required security modules; Profile: +3 years of experience with integrating different type of applications within SailPoint: Active Directory and Azure AD integrations; Databases (Oracle, MySQL, Postgres, MSSQL); SCIM integrations. REST & XML web services integrations; Hands-on experience installing, developing, configuring and supporting SailPoint IdentityIQ in administration and maintenance of production SailPoint IdentityIQ platform; Extensive knowledge and understanding of Information Security,Identity & Access Governance (IAG), and SailPoint technologies; Proven experience with Identity Lifecycle, User Provisioning,Directory Services, Password Management, Single Sign-On(SSO), Audit & Compliance, Identity Governance, and Role Management; Solid understanding and experience with SailPoint connectors; Skills in dealing with Java EE or Microsoft .NET environment; In-depth knowledge developing and scripting, such as Java, Javascript, PowerShell, SQL, etc; Fluent in English; Interested: Please send your resume to:resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Back-End Java Developer - Spanish/English","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:17:33+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":"30001","id":"609729000005680153","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-06-02T18:08:41+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Murcia","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Permanent","Job_Opening_Name":"Senior Back-End Java Developer - Spanish/English","Number_of_Positions":"1","State":"Murcia","Country_2":null,"Country":"Spain","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005680153/Senior-Back-End-Java-Developer---Spanish-English?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Full remote Senior Back-End Java Developer. Candidates need to have a good level of Spanish and English.","Publish":true,"Modified_Time":"2023-12-13T11:17:33+01:00","No_of_Candidates_Associated":3,"Job_Opening_ID":"ZR_573_JOB","Job_Description":"We are urgently looking for a Full remote Senior Back-End Java Developer. Candidates need to have a good level of Spanish and English. This position is only for employees. Candidates need to be willing to go to the office in Murcia for max 5 days on a quarterly base. Tasks and Responsibilities: ​ Develop software solutions to client requirements using efficient, reusable, and reliable code; Understand interactions and dependencies between software components; Work as part of an agile team participating in pair programming, code reviews and sprint ceremonies including backlog refinement, sprint planning, demos, and retrospectives. Support project governance by fully documenting solutions and fixes; Profile: College / university degree, Bacc. Ing. Comp (or similar through experience); +5 years of experience in Java stack (Java, Spring, ) on commercial projects; Front-end experience using Javascript / Angular / React is an advantage; Candidates need to have a good level of English or willing to improve/learn; Offered: Attractive salary package (employees); Career development training; English classes; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Back-End Java Developer - Spanish/English - Remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:17:53+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005680113","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-06-02T18:00:45+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Back-End Java Developer - Spanish/English - Remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005680113/Senior-Back-End-Java-Developer---Spanish-English---Remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Full remote Senior Back-End Java Developer. Candidates need to have a good level of Spanish and English.","Publish":true,"Modified_Time":"2024-01-12T12:57:23+01:00","No_of_Candidates_Associated":11,"Job_Opening_ID":"ZR_572_JOB","Job_Description":"We are urgently looking for a Full remote Senior Back-End Java Developer. Candidates need to have a good level of Spanish and English. This position is only for employees. Candidates need to be willing to go to the office in Murcia for max 5 days on a quarterly base. Tasks and Responsibilities: ​ Develop software solutions to client requirements using efficient, reusable, and reliable code; Understand interactions and dependencies between software components; Work as part of an agile team participating in pair programming, code reviews and sprint ceremonies including backlog refinement, sprint planning, demos, and retrospectives. Support project governance by fully documenting solutions and fixes; Profile: College / university degree, Bacc. Ing. Comp (or similar through experience); +5 years of experience in Java stack (Java, Spring, ) on commercial projects; Front-end experience using Javascript / Angular / React is an advantage; Candidates need to have a good level of English or willing to improve/learn; Offered: ​ Attractive salary package (employees); Career development training; English classes; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java Solution Architect - Murcia","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:18:04+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":"25631","id":"609729000005680053","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Architect"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-06-02T17:36:37+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Murcia","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Permanent","Job_Opening_Name":"Senior Java Solution Architect - Murcia","Number_of_Positions":"1","State":"Cataluna","Country_2":null,"Country":"Spain","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005680053/Senior-Java-Solution-Architect---Murcia?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Full remote Senior Java Solution Architect. Candidates need to have a good level of English.","Publish":true,"Modified_Time":"2023-12-13T11:18:04+01:00","No_of_Candidates_Associated":2,"Job_Opening_ID":"ZR_571_JOB","Job_Description":"We are urgently looking for a Full remote Senior Java Solution Architect. Candidates need to have a good level of English. This position is remote and long-term. Candidates need to be willing to go to the office in Murcia for 5 days on a quarterly base. Tasks and Responsibilities: Prepare solution designs, process and service flow diagrams; Review and document existing client architecture; Present findings and solutions design to IT stakeholders; Specify solution design and technology best practices and tooling; Help establish architecture, design and technology principles and guidelines; Participate in solution design and application development; Ensure standards and architecture principles are followed; Recommend technology and solution architectures; Profile: Bachelor or Master degree; +5 years’ experience in technical and/or solution design and architecture roles; Experience with 1 or more of following technologies: Java, Spring, Hibernate, Angular, React; Experience gained from working in client-facing roles within a leading IT services, systems integrator, or management consulting firm; Must have strong experience of digital transformation, road maps, target operating models, cost reduction, performance improvement; Must have knowledge of Agile ways of working and experience supporting clients adopting Agile; Must have strong stakeholder management and excellent communication and presentation skills; Nice to have: Terraform, Cloud Architecture, Ansible, Chef, Puppet, Kubernetes, Red Hat Openshift, Docker, Jenkins, ArgoCD, Azure DevOps, GitLab, API Gateways (Kong, Istio, NGINX); Offered: Attractive salary package (employees);               Career development training; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java Solution Architect - Remote - Murcia","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:18:15+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005680001","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Architect"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-06-02T17:26:52+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Java Solution Architect - Remote - Murcia","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005680001/Senior-Java-Solution-Architect---Remote---Murcia?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Full remote Senior Java Solution Architect. Candidates need to have a good level of English.","Publish":true,"Modified_Time":"2023-12-13T11:18:15+01:00","No_of_Candidates_Associated":3,"Job_Opening_ID":"ZR_570_JOB","Job_Description":"We are urgently looking for a Full remote Senior Java Solution Architect. Candidates need to have a good level of English. This position is remote and long-term. Candidates need to be willing to go to the office in Murcia for 5 days on a quarterly base. Tasks and Responsibilities: ​ Prepare solution designs, process and service flow diagrams; Review and document existing client architecture; Present findings and solutions design to IT stakeholders; Specify solution design and technology best practices and tooling; Help establish architecture, design and technology principles and guidelines; Participate in solution design and application development; Ensure standards and architecture principles are followed; Recommend technology and solution architectures; Profile: Bachelor or Master degree; +5 years’ experience in technical and/or solution design and architecture roles; Experience with 1 or more of following technologies: Java, Spring, Hibernate, Angular, React; Experience gained from working in client-facing roles within a leading IT services, systems integrator, or management consulting firm; Must have strong experience of digital transformation, road maps, target operating models, cost reduction, performance improvement; Must have knowledge of Agile ways of working and experience supporting clients adopting Agile; Must have strong stakeholder management and excellent communication and presentation skills; Nice to have: Terraform, Cloud Architecture, Ansible, Chef, Puppet, Kubernetes, Red Hat Openshift, Docker, Jenkins, ArgoCD, Azure DevOps, GitLab, API Gateways (Kong, Istio, NGINX); Offered: Attractive salary package (employees);               Career development training; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java Architect - Full remote - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:18:27+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005667167","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-06-01T13:37:07+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java Architect - Full remote - Contractor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005667167/Senior-Java-Architect---Full-remote---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an European Institution in The Netherlands, are urgently looking for a handson full remote Senior Java Architect with experience with Azure Cloud solutions.","Publish":true,"Modified_Time":"2024-03-09T12:16:41+01:00","No_of_Candidates_Associated":5,"Job_Opening_ID":"ZR_569_JOB","Job_Description":"For an European Institution in The Netherlands, are urgently looking for a handson full remote Senior Java Architect with experience with Azure Cloud solutions. This role can be performed remote from any EU country.  Candidates need to be fluent in English. A work permit is required. Tasks and responsibilities: ​ Contribute to the design of robust, multi-threaded and distributed system components, deployed both on premise and in Microsoft Azure; Document decisions and design solutions using standard notations such as UML and Archimate3; Develop high quality code in Java language and understand the related software ecosystem (maven, Junit, mocking libraries …); Implement and improve continuous build and integration (e.g. Jenkins) processes, unit testing and code quality metrics; Analyse and influence functional and non-functional requirements; Profile: Bachelor or Master degree; +8 years of experience in a similar role; Strong experience in object oriented analysis & design (OOA&D) and Java language development; Experience using agile software development methodologies (i.e. Scrum, Kanban and other lean techniques); Experience in implementing cloud services and architecture, serverless functions, event based architectures, for instance on Microsoft Azure; Proven experience of REST API development; Proven experience of SOAP API integration; Experience with Oracle Service Bus; Very good knowledge of the Spring framework; Knowledge of OWASP secure coding guidelines; Implement and improve continuous build and integration (e.g. Jenkins) processes, unit testing and code quality metrics; Analyse and influence functional and non-functional requirements; Produce clean, unit testable and well documented source code; Experience in defining tasks/stories with clear estimates and prioritisation; BCS, TOGAF, SWEBOK or other equivalent and valid certificates; Fluent in English; Interested: Please send your resume to:resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java Architect - Full remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:18:37+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005667113","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-06-01T13:32:59+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Java Architect - Full remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005667113/Senior-Java-Architect---Full-remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an European Institution in The Netherlands, are urgently looking for a handson full remote Senior Java Architect with experience with Azure Cloud solutions.","Publish":true,"Modified_Time":"2024-05-04T09:12:19+02:00","No_of_Candidates_Associated":2,"Job_Opening_ID":"ZR_568_JOB","Job_Description":"For an European Institution in The Netherlands, are urgently looking for a handson full remote Senior Java Architect with experience with Azure Cloud solutions. This role can be performed remote from any EU country.  Candidates need to be fluent in English. A work permit is required. Tasks and responsibilities: Contribute to the design of robust, multi-threaded and distributed system components, deployed both on premise and in Microsoft Azure; Document decisions and design solutions using standard notations such as UML and Archimate3; Develop high quality code in Java language and understand the related software ecosystem (maven, Junit, mocking libraries …); Implement and improve continuous build and integration (e.g. Jenkins) processes, unit testing and code quality metrics; Analyse and influence functional and non-functional requirements; Profile: ​ Bachelor or Master degree; +8 years of experience in a similar role; Strong experience in object oriented analysis & design (OOA&D) and Java language development; Experience using agile software development methodologies (i.e. Scrum, Kanban and other lean techniques); Experience in implementing cloud services and architecture, serverless functions, event based architectures, for instance on Microsoft Azure; Proven experience of REST API development; Proven experience of SOAP API integration; Experience with Oracle Service Bus; Very good knowledge of the Spring framework; Knowledge of OWASP secure coding guidelines; Implement and improve continuous build and integration (e.g. Jenkins) processes, unit testing and code quality metrics; Analyse and influence functional and non-functional requirements; Produce clean, unit testable and well documented source code; Experience in defining tasks/stories with clear estimates and prioritisation; BCS, TOGAF, SWEBOK or other equivalent and valid certificates; Fluent in English; Interested: Please send your resume to:resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java Architect - Full remote - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:18:53+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005667061","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-06-01T13:28:25+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java Architect - Full remote - Contractor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005667061/Senior-Java-Architect---Full-remote---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an European Institution in The Netherlands, are urgently looking for a handson full remote Senior Java Architect with experience with Azure Cloud solutions.","Publish":true,"Modified_Time":"2023-12-13T11:18:53+01:00","No_of_Candidates_Associated":8,"Job_Opening_ID":"ZR_567_JOB","Job_Description":"For an European Institution in The Netherlands, are urgently looking for a handson full remote Senior Java Architect with experience with Azure Cloud solutions. This role can be performed remote from any EU country.  Candidates need to be fluent in English. A work permit is required. Tasks and responsibilities: ​ Contribute to the design of robust, multi-threaded and distributed system components, deployed both on premise and in Microsoft Azure; Document decisions and design solutions using standard notations such as UML and Archimate3; Develop high quality code in Java language and understand the related software ecosystem (maven, Junit, mocking libraries …); Implement and improve continuous build and integration (e.g. Jenkins) processes, unit testing and code quality metrics; Analyse and influence functional and non-functional requirements; Profile: Bachelor or Master degree; +8 years of experience in a similar role; Strong experience in object oriented analysis & design (OOA&D) and Java language development; Experience using agile software development methodologies (i.e. Scrum, Kanban and other lean techniques); Experience in implementing cloud services and architecture, serverless functions, event based architectures, for instance on Microsoft Azure; Proven experience of REST API development; Proven experience of SOAP API integration; Experience with Oracle Service Bus; Very good knowledge of the Spring framework; Knowledge of OWASP secure coding guidelines; Implement and improve continuous build and integration (e.g. Jenkins) processes, unit testing and code quality metrics; Analyse and influence functional and non-functional requirements; Produce clean, unit testable and well documented source code; Experience in defining tasks/stories with clear estimates and prioritisation; BCS, TOGAF, SWEBOK or other equivalent and valid certificates; Fluent in English; Interested: Please send your resume to:resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java Architect - Full remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:19:07+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005667009","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-06-01T13:21:59+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Java Architect - Full remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005667009/Senior-Java-Architect---Full-remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an European Institution in The Netherlands, are urgently looking for a handson full remote Senior Java Architect with experience with Azure Cloud solutions.","Publish":true,"Modified_Time":"2024-05-04T09:13:06+02:00","No_of_Candidates_Associated":8,"Job_Opening_ID":"ZR_566_JOB","Job_Description":"For an European Institution in The Netherlands, are urgently looking for a handson full remote Senior Java Architect with experience with Azure Cloud solutions. This role can be performed remote from any EU country.  Candidates need to be fluent in English. A work permit is required. Tasks and responsibilities: ​ Contribute to the design of robust, multi-threaded and distributed system components, deployed both on premise and in Microsoft Azure; Document decisions and design solutions using standard notations such as UML and Archimate3; Develop high quality code in Java language and understand the related software ecosystem (maven, Junit, mocking libraries …); Implement and improve continuous build and integration (e.g. Jenkins) processes, unit testing and code quality metrics; Analyse and influence functional and non-functional requirements; Profile: Bachelor or Master degree; +8 years of experience in a similar role; Strong experience in object oriented analysis & design (OOA&D) and Java language development; Experience using agile software development methodologies (i.e. Scrum, Kanban and other lean techniques); Experience in implementing cloud services and architecture, serverless functions, event based architectures, for instance on Microsoft Azure; Proven experience of REST API development; Proven experience of SOAP API integration; Experience with Oracle Service Bus; Very good knowledge of the Spring framework; Knowledge of OWASP secure coding guidelines; Implement and improve continuous build and integration (e.g. Jenkins) processes, unit testing and code quality metrics; Analyse and influence functional and non-functional requirements; Produce clean, unit testable and well documented source code; Experience in defining tasks/stories with clear estimates and prioritisation; BCS, TOGAF, SWEBOK or other equivalent and valid certificates; Fluent in English; Interested: Please send your resume to:resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Automation Tester – The Hague – Remote / Travel 1 week every 6 weeks - Contactor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:19:18+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005654055","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Testing"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-05-31T15:56:54+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Automation Tester – The Hague – Remote / Travel 1 week every 6 weeks - Contactor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005654055/Senior-Automation-Tester-–-The-Hague-–-Remote-Travel-1-week-every-6-weeks---Contactor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an European Institution in The Hague, we are urgently looking for a Automation Tester with  with cloud deployments, DevOps and/or infrastructure engineering experience.","Publish":true,"Modified_Time":"2023-12-13T11:19:18+01:00","No_of_Candidates_Associated":3,"Job_Opening_ID":"ZR_565_JOB","Job_Description":"For an European Institution in The Hague, we are urgently looking for a Automation Tester with  with cloud deployments, DevOps and/or infrastructure engineering experience. The requested profiles should be able to develop and implement User Interfaces for Java applications. The Contractor staff will work closely together within technical team developing and supporting tools for the described projects. Candidates need to be willing to work 1 week per 6 weeks on-site in The Hague, the Netherlands after Covid-19.Candidates need to be fluent in English. A work permit is required. EU Candidates need to be fluent in English.This position is also open for contractors, who would like to commit long-term. Tasks and responsabilities: Testing of IT systems; Preparation of tests and use cases; Provide written reports of test results; Recognition of differentiation between UI improvements and those requiring major adaptation efforts; Write data conversion scripts, research and write analysis reports, communicate with various technical teams; Analyse computer functions, design programs, test and debug, troubleshooting etc; Profile: ​ Bachelor or Master degree; +5 years of experience as a Test Engineer (DevOps) where you have worked with the following technical environment based on Java technologies such as Wildfly, Java EE, Spring, Apache, Hibernate, JCR, Mule, MySQL CE and Oracle DB; Senior level experience of managing and administering Linux based systems; Experience with cloud deployments, DevOps and infrastructure engineering; Knowledge of configuring Kubernetes-based infrastructure, networking policies, LBs, deployment strategies and cluster security; CI/CD pipeline building tools (git, maven, Jenkins); System monitoring experience (Prometheus and Grafana preferred); Ability to write Dockerfiles, Jenkinsfiles and Helm charts; Cloud automation and infrastructure provisioning (Ansible preferred); Experience coding with Python and/or Java; Fluent in English; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Automation Tester – The Hague – Remote / Travel 1 week every 6 weeks","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:19:34+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005654007","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Testing"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-05-31T15:47:43+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Automation Tester – The Hague – Remote / Travel 1 week every 6 weeks","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005654007/Senior-Automation-Tester-–-The-Hague-–-Remote-Travel-1-week-every-6-weeks?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an European Institution in The Hague, we are urgently looking for a Automation Tester with  with cloud deployments, DevOps and/or infrastructure engineering experience.","Publish":true,"Modified_Time":"2024-04-15T14:44:16+02:00","No_of_Candidates_Associated":6,"Job_Opening_ID":"ZR_564_JOB","Job_Description":"For an European Institution in The Hague, we are urgently looking for a Automation Tester with  with cloud deployments, DevOps and/or infrastructure engineering experience. The requested profiles should be able to develop and implement User Interfaces for Java applications. The Contractor staff will work closely together within technical team developing and supporting tools for the described projects. Candidates need to be willing to work 1 week per 6 weeks on-site in The Hague, the Netherlands after Covid-19.Candidates need to be fluent in English. A work permit is required. EU Candidates need to be fluent in English.This position is also open for contractors, who would like to commit long-term. Tasks and responsabilities: Testing of IT systems; Preparation of tests and use cases; Provide written reports of test results; Recognition of differentiation between UI improvements and those requiring major adaptation efforts; Write data conversion scripts, research and write analysis reports, communicate with various technical teams; Analyse computer functions, design programs, test and debug, troubleshooting etc; Profile: ​ Bachelor or Master degree; +5 years of experience as a Test Engineer (DevOps) where you have worked with the following technical environment based on Java technologies such as Wildfly, Java EE, Spring, Apache, Hibernate, JCR, Mule, MySQL CE and Oracle DB; Senior level experience of managing and administering Linux based systems; Experience with cloud deployments, DevOps and infrastructure engineering; Knowledge of configuring Kubernetes-based infrastructure, networking policies, LBs, deployment strategies and cluster security; CI/CD pipeline building tools (git, maven, Jenkins); System monitoring experience (Prometheus and Grafana preferred); Ability to write Dockerfiles, Jenkinsfiles and Helm charts; Cloud automation and infrastructure provisioning (Ansible preferred); Experience coding with Python and/or Java; Fluent in English; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Solution Architect with AWS and/or Azure experience - Remote - Murcia","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:19:46+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005627004","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Architect"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-05-27T13:35:19+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Solution Architect with AWS and/or Azure experience - Remote - Murcia","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005627004/Solution-Architect-with-AWS-and-or-Azure-experience---Remote---Murcia?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Full remote Senior Solution Architect with experience with Cloud solutions. Candidates need to have a good level of English.","Publish":true,"Modified_Time":"2023-12-13T11:19:46+01:00","No_of_Candidates_Associated":2,"Job_Opening_ID":"ZR_563_JOB","Job_Description":"We are urgently looking for a Full remote Senior Solution Architect with experience with Cloud solutions. Candidates need to have a good level of English. This position is remote and long-term. Candidates need to be willing to go to the office in Murcia for 5 days on a quarterly base. Tasks and Responsibilities: ​ Prepare solution designs, process and service flow diagrams; Review and document existing client architecture; Present findings and solutions design to IT stakeholders; Specify solution design and technology best practices and tooling; Help establish architecture, design and technology principles and guidelines; Participate in solution design and application development; Ensure standards and architecture principles are followed; Recommend technology and solution architectures; Profile: Bachelor or Master degree; +5 years’ experience in technical and/or solution design and architecture roles; Any certification is welcome; Advantageous certifications: AWS Certified Solution Architect - Professional, Microsoft Certified Azure Solutions Architect - Expert, Google Professional Cloud Architect, Red Hat Certified Architect; Experience with 1 or more of following technologies: Consul, Istio, Linkerd, .Net, Java, Python, JavaScript; Experience gained from working in client-facing roles within a leading IT services, systems integrator, or management consulting firm; Must have strong experience of digital transformation, road maps, target operating models, cost reduction, performance improvement; Must have knowledge of Agile ways of working and experience supporting clients adopting Agile; Must have strong stakeholder management and excellent communication and presentation skills; Nice to have: Terraform, Cloud Architecture, Ansible, Chef, Puppet, Kubernetes, Red Hat Openshift, Docker, Jenkins, ArgoCD, Azure DevOps, GitLab, API Gateways (Kong, Istio, NGINX); Offered: Attractive salary package (employees); Career development training; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Full-Stack Java Developer - Remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:19:58+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005499053","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-05-19T14:28:18+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"4-5 years","Job_Type":"Full time","Job_Opening_Name":"Full-Stack Java Developer - Remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005499053/Full-Stack-Java-Developer---Remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Full remote Senior Full-Stack Java Developer. Candidates need to have a good level of English or willing to improve/learn.","Publish":true,"Modified_Time":"2024-04-22T17:35:07+02:00","No_of_Candidates_Associated":13,"Job_Opening_ID":"ZR_562_JOB","Job_Description":"We are urgently looking for a Full remote Senior Full-Stack Java Developer. Candidates need to have a good level of English or willing to improve/learn.  Los candidatos deben hablar inglés con fluidez o estar dispuestos a mejorar su Inglés. This position is remote and long-term. Candidates need to be willing to go to the office in Murcia for 5 days on a quarterly base. Tasks and Responsibilities: Develop software solutions to client requirements using efficient, reusable, and reliable code; Understand interactions and dependencies between software components; Work as part of an agile team participating in pair programming, code reviews and sprint ceremonies including backlog refinement, sprint planning, demos, and retrospectives. Support project governance by fully documenting solutions and fixes; Work with a range of containerised cloud technologies to provide best in class solutions; Profile: College / university degree, Bacc. Ing. Comp (or similar through experience); +3 years of experience in Java stack (Java, Spring, ) on commercial projects; Front-end experience using Angular / React; Experience with writing and maintaining high volume servers / services; Experience with microservices architecture; Familiar with API frameworks; In-depth knowledge of ., Angular, React and Nodejs; Familiar with GIT best practises; Familiar with the use of JIRA / ADO for backlog and problem management; Experience of working in scrum / sprint teams using agile ways of working; Candidates need to have a good level of English or willing to improve/learn; Offered: ​ Attractive salary package (employees); Career development training; English classes; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Back-End Java Developer - Remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:20:11+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005499011","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-05-19T14:21:12+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Back-End Java Developer - Remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005499011/Back-End-Java-Developer---Remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"Los candidatos deben hablar inglés con fluidez o estar dispuestos a mejorar su Inglés. Candidates need to have a good level of English or willing to improve/learn.","Publish":true,"Modified_Time":"2024-05-13T11:08:16+02:00","No_of_Candidates_Associated":15,"Job_Opening_ID":"ZR_561_JOB","Job_Description":"Los candidatos deben hablar inglés con fluidez o estar dispuestos a mejorar su Inglés. Candidates need to have a good level of English or willing to improve/learn. We are urgently looking for a Full remote Back-End Java Developer. We are looking for Medior and Senior Java Developers. Candidates need to have a good level of English or willing to improve/learn. This position is only for employees. Candidates need to be willing to go to the office in Murcia for max 5 days on a quarterly base. Tasks and Responsibilities: Develop software solutions to client requirements using efficient, reusable, and reliable code; Understand interactions and dependencies between software components; Work as part of an agile team participating in pair programming, code reviews and sprint ceremonies including backlog refinement, sprint planning, demos, and retrospectives. Support project governance by fully documenting solutions and fixes; Profile: College / university degree, Bacc. Ing. Comp (or similar through experience); +2/5 years of experience in Java stack (Java, Spring, ) on commercial projects; Front-end experience using Javascript / Angular / React is an advantage; Candidates need to have a good level of English or willing to improve/learn; Offered: ​ Attractive salary package (employees); Career development training; English classes; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Medior iOS Developer - Spanish/English - Full Remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:20:24+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005434042","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["iOS"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-05-13T10:32:51+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"1-3 years","Job_Type":"Full time","Job_Opening_Name":"Medior iOS Developer - Spanish/English - Full Remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005434042/Medior-iOS-Developer---Spanish-English---Full-Remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Full Remote Medior iOS Developers based in Spain.  Candidates need to have a good level of English or willing to improve/learn.","Publish":true,"Modified_Time":"2023-12-13T11:20:24+01:00","No_of_Candidates_Associated":1,"Job_Opening_ID":"ZR_560_JOB","Job_Description":"We are urgently looking for a Full Remote Medior iOS Developers based in Spain.  Candidates need to have a good level of English or willing to improve/learn. This position is only open for employees, who would like to work remote. Candidates need to be willing to go to the office in Murcia for 5 days on a quarterly base. Tasks and Responsibilities: ​ Design and develop software solutions to client requirements; Participate in identifying problem areas and defining solutions; Able to articulate problems and solutions in non-technical language to stakeholders; Understand interactions and dependencies between software components; Support the product engineering lead(s) in project set up, execution and key ceremonies including backlog refinement, sprint planning, demos and retrospectives; Support learning and development activities for junior product engineering resources; Profile: College / university degree, Bacc. Ing. Comp (or similar); +2 years of iOS mobile development experience (Swift, Objective-C, ...); Strong understanding of Apple’s design principles & interface guidelines; Candidates need to have a good level of English and/or willing to improve/learn; Offered: Attractive salary package (employees); Career development training; English classes; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior iOS Developer - Spanish/English - Full Remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:20:38+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005434006","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["iOS"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-05-13T10:19:30+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"1-3 years","Job_Type":"Full time","Job_Opening_Name":"Senior iOS Developer - Spanish/English - Full Remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005434006/Senior-iOS-Developer---Spanish-English---Full-Remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Full Remote Senior iOS Developers based in Spain.  Candidates need to have a good level of English or willing to improve/learn.","Publish":true,"Modified_Time":"2023-12-13T11:20:38+01:00","No_of_Candidates_Associated":1,"Job_Opening_ID":"ZR_559_JOB","Job_Description":"We are urgently looking for a Full Remote Senior iOS Developers based in Spain.  Candidates need to have a good level of English or willing to improve/learn. This position is only open for employees, who would like to work remote. Candidates need to be willing to go to the office in Murcia for 5 days on a quarterly base. Tasks and Responsibilities : ​ Design and develop software solutions to client requirements; Participate in identifying problem areas and defining solutions; Able to articulate problems and solutions in non-technical language to stakeholders; Understand interactions and dependencies between software components; Support the product engineering lead(s) in project set up, execution and key ceremonies including backlog refinement, sprint planning, demos and retrospectives; Support learning and development activities for junior product engineering resources; Profile : College / university degree, Bacc. Ing. Comp (or similar); +2 years of iOS mobile development experience (Swift, Objective-C, ...); +5 years of software development experience; Strong understanding of Apple’s design principles & interface guidelines; Candidates need to have a good level of English and/or willing to improve/learn; Offered: Attractive salary package (employees); Career development training; English classes; Interested : Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Solutions Architect - Full remote - Contactor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:20:48+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005311024","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Architect"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-05-04T07:04:45+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Solutions Architect - Full remote - Contactor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005311024/Solutions-Architect---Full-remote---Contactor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an International Institution, we are urgently looking for an experienced (Senior) Solutions Architect - Full remote with recent architecture experience","Publish":true,"Modified_Time":"2024-01-13T20:52:52+01:00","No_of_Candidates_Associated":2,"Job_Opening_ID":"ZR_558_JOB","Job_Description":"For an International Institution, we are urgently looking for an experienced (Senior) Solutions Architect - Full remote with recent architecture experience in the development of solutions linking mobile (particularly Android) and server-side solutions.. Candidates need to be fluent in English. This positions is long-term open for contractors or employees. Work permit not required. Tasks and responsibilities  Design and lead the implementation of a solutions architecture across a group of specific business applications or technologies based on the organization’s business strategy and business requirements; Analyze the current-state business/IT environment and solution portfolio to detect critical deficiencies and recommend solutions for improvement; Understand technology trends and the practical application of existing new and emerging technologies to enable new and evolving business and operating models; Define the principles, guidelines, standards and solution patterns to ensure solution decisions are aligned with the organization’s future-state architecture vision; Design and direct the governance activities associated with ensuring solutions architecture assurance and compliance; Facilitate the evaluation and selection of software product standards and services, as well as the design of standard and custom software configurations; Consult with application and infrastructure development projects to fit systems or infrastructure to architecture and identify when it is necessary to modify projects to accommodate the solutions architecture; Document all solution architecture design and analysis work; Collaborate with business focal points, PMO, project teams and IT staff in other functional areas as needed to fulfil the responsibilities described above; Profile Bachelor or Master degree; +5 years of recent professional experience in IT solution development disciplines including technical architecture, network management, application development, middleware, database management, software design, software architecture; Recent architecture experience in the development of solutions linking mobile (particularly Android) and server-side solutions; Proven leadership and decision-making skills; Experienced in architecture role on the successful delivery of complex cross-functional or interdependent projects, some of which should be at the global or international levels; Knowledge of all components of an enterprise technical architecture; Excellent understanding of application development methodologies and infrastructure and network architecture; Experienced in at least one of the most popular software development languages (e.g. JavaScript, Python, Java, C/C++, PHP or C#); Experienced with Software Development Lifecycle (SDLC) practices (and tools) such as code versioning, packaging, test-driven development (TDD), continuous integration, test automation, code analysis and code quality metrics; Experienced in the design and development of complex mobile solutions (particularly Android); Experienced in designing and implementing service-oriented (ideally microservice) architectures; Experienced in designing, implementing, and troubleshooting infrastructure services (network, container, virtual machine or operating system levels); Experienced working with senior-level management; Fluent in English; Interested: Please send your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Solutions Architect - Full remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:21:01+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005311004","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Architect"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-05-04T06:43:16+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Solutions Architect - Full remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005311004/Solutions-Architect---Full-remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an International Institution, we are urgently looking for an experienced (Senior) Solutions Architect - Full remote with recent architecture experience","Publish":true,"Modified_Time":"2024-04-29T10:48:54+02:00","No_of_Candidates_Associated":5,"Job_Opening_ID":"ZR_557_JOB","Job_Description":"For an International Institution, we are urgently looking for an experienced (Senior) Solutions Architect - Full remote with recent architecture experience in the development of solutions linking mobile (particularly Android) and server-side solutions.. Candidates need to be fluent in English. This positions is long-term open for contractors or employees. Work permit not required. Tasks and responsibilities: Design and lead the implementation of a solutions architecture across a group of specific business applications or technologies based on the organization’s business strategy and business requirements; Analyze the current-state business/IT environment and solution portfolio to detect critical deficiencies and recommend solutions for improvement; Understand technology trends and the practical application of existing new and emerging technologies to enable new and evolving business and operating models; Define the principles, guidelines, standards and solution patterns to ensure solution decisions are aligned with the organization’s future-state architecture vision; Design and direct the governance activities associated with ensuring solutions architecture assurance and compliance; Facilitate the evaluation and selection of software product standards and services, as well as the design of standard and custom software configurations; Consult with application and infrastructure development projects to fit systems or infrastructure to architecture and identify when it is necessary to modify projects to accommodate the solutions architecture; Document all solution architecture design and analysis work; Collaborate with business focal points, PMO, project teams and IT staff in other functional areas as needed to fulfil the responsibilities described above; Profile ​ Bachelor or Master degree; +5 years of recent professional experience in IT solution development disciplines including technical architecture, network management, application development, middleware, database management, software design, software architecture; Recent architecture experience in the development of solutions linking mobile (particularly Android) and server-side solutions; Proven leadership and decision-making skills; Experienced in architecture role on the successful delivery of complex cross-functional or interdependent projects, some of which should be at the global or international levels; Knowledge of all components of an enterprise technical architecture; Excellent understanding of application development methodologies and infrastructure and network architecture; Experienced in at least one of the most popular software development languages (e.g. JavaScript, Python, Java, C/C++, PHP or C#); Experienced with Software Development Lifecycle (SDLC) practices (and tools) such as code versioning, packaging, test-driven development (TDD), continuous integration, test automation, code analysis and code quality metrics; Experienced in the design and development of complex mobile solutions (particularly Android); Experienced in designing and implementing service-oriented (ideally microservice) architectures; Experienced in designing, implementing, and troubleshooting infrastructure services (network, container, virtual machine or operating system levels); Experienced working with senior-level management; Fluent in English; Interested: Please send your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Microsoft Power BI / Data Analytics Specialist - Full Remote - Contactor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:21:17+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005284031","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Business Analyst"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-04-28T18:24:19+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"4-5 years","Job_Type":"Contract","Job_Opening_Name":"Microsoft Power BI / Data Analytics Specialist - Full Remote - Contactor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005284031/Microsoft-Power-BI-Data-Analytics-Specialist---Full-Remote---Contactor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an International Institution, we are urgently looking for an experienced (Senior) Power BI Report Developer - Full remote.","Publish":true,"Modified_Time":"2024-05-14T13:54:44+02:00","No_of_Candidates_Associated":6,"Job_Opening_ID":"ZR_556_JOB","Job_Description":"For an International Institution, we are urgently looking for an experienced (Senior) Power BI Report Developer - Full remote. Candidates need to be fluent in English. This positions is long-term open for contractors or employees. Work permit not required. Candidates need to be based willing to work at least 4-6 hours NY time. Tasks and responsibilities: Engage with stakeholders to determine data analytics requirements; Analyze business needs and create data-driven solutions; Gather and analyze corporate data; Implement data analytics applications, including data transformation, analysis and visualization; Contribute to standards for analytics pipelines; Profile: ​ Business analysis skills - understanding clients’ business needs and translate those into data driven solutions; Understanding of data governance issues such as data privacy and protection; Proficiency with data analytics tools, particularly the Python ecosystem for data exploration and pipeline automation and Microsoft Power BI; Experience in developing interactive visualization applications and visual design of information; Fluent in English; Interested: Please send you CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Microsoft Power BI / Data Analytics Specialist - Full Remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:21:31+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005284003","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Business Analyst"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-04-28T18:10:40+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"4-5 years","Job_Type":"Full time","Job_Opening_Name":"Microsoft Power BI / Data Analytics Specialist - Full Remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005284003/Microsoft-Power-BI-Data-Analytics-Specialist---Full-Remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an International Institution, we are urgently looking for an experienced (Senior) Power BI Report Developer - Full remote.","Publish":true,"Modified_Time":"2023-12-13T11:21:31+01:00","No_of_Candidates_Associated":10,"Job_Opening_ID":"ZR_555_JOB","Job_Description":"For an International Institution, we are urgently looking for an experienced (Senior) Power BI Report Developer - Full remote. Candidates need to be fluent in English. This positions is long-term open for contractors or employees. Work permit not required. Candidates need to be based willing to work at least 4-6 hours NY time. Tasks and responsibilities: Engage with stakeholders to determine data analytics requirements; Analyze business needs and create data-driven solutions; Gather and analyze corporate data; Implement data analytics applications, including data transformation, analysis and visualization; Contribute to standards for analytics pipelines; Profile: ​ Business analysis skills - understanding clients’ business needs and translate those into data driven solutions; Understanding of data governance issues such as data privacy and protection; Proficiency with data analytics tools, particularly the Python ecosystem for data exploration and pipeline automation and Microsoft Power BI; Experience in developing interactive visualization applications and visual design of information; Fluent in English; Interested: Please send you CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Front-end Drupal Developer - Full Remote - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:23:56+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005151094","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Front-End"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-04-21T16:27:09+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"1-3 years","Job_Type":"Contract","Job_Opening_Name":"Front-end Drupal Developer - Full Remote - Contractor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005151094/Front-end-Drupal-Developer---Full-Remote---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international organization, we are urgently looking for a REMOTE Front-end Drupal Developer Developer with Drupal 9 experience.","Publish":true,"Modified_Time":"2024-05-10T20:45:20+02:00","No_of_Candidates_Associated":6,"Job_Opening_ID":"ZR_554_JOB","Job_Description":"For an international organization, we are urgently looking for a REMOTE Front-end Drupal Developer Developer with Drupal 9 experience. EU candidates need to be fluent in English. All positions are long-term. Work permit is required. This position is open for contractors and employees. Tasks and responsibilities: ​ Build Drupal (sub-)themes and create custom templates and libraries; Development and maintenance of full-lifecycle implementations of Drupal-based solutions; Proactively propose user-friendly layouts and improvements; Undertake a feature gap analysis; Profile: Bachelor or Master degree; +2 years of experience in providing assistance to design, development, implementation and maintenance in developing Drupal 8/9 web sites is required; Experience with IU/UX and development of responsive websites using frameworks (e.g. Bootstrap); Proficiency in using Git for source control management; Experience with Agile project development and product delivery; Knowledge in automated testing, deployment processes, and continuous integration; Fluent in English; Location: Remote (within Europe); Salary/Day price: Depending on experience; Interested: Please send your resume to: resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Front-end Drupal Developer - Full Remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:24:08+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005151064","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Front-End"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-04-21T16:16:36+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"1-3 years","Job_Type":"Full time","Job_Opening_Name":"Front-end Drupal Developer - Full Remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005151064/Front-end-Drupal-Developer---Full-Remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international organization, we are urgently looking for a REMOTE Front-end Drupal Developer Developer with Drupal 9 experience.","Publish":true,"Modified_Time":"2024-03-08T16:18:04+01:00","No_of_Candidates_Associated":4,"Job_Opening_ID":"ZR_553_JOB","Job_Description":"For an international organization, we are urgently looking for a REMOTE Front-end Drupal Developer Developer with Drupal 9 experience. EU candidates need to be fluent in English. All positions are long-term. Work permit is required. This position is open for contractors and employees. Tasks and responsibilities: ​ Build Drupal (sub-)themes and create custom templates and libraries; Development and maintenance of full-lifecycle implementations of Drupal-based solutions; Proactively propose user-friendly layouts and improvements; Undertake a feature gap analysis; Profile: Bachelor or Master degree; +2 years of experience in providing assistance to design, development, implementation and maintenance in developing Drupal 8/9 web sites is required; Experience with IU/UX and development of responsive websites using frameworks (e.g. Bootstrap); Proficiency in using Git for source control management; Experience with Agile project development and product delivery; Knowledge in automated testing, deployment processes, and continuous integration; Fluent in English; Location: Remote (within Europe); Salary/Day price: Depending on experience; Interested: Please send your resume to: resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"2x iOS Developer - Murcia - Remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:24:20+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005135061","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["iOS"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-04-20T12:44:08+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"4-5 years","Job_Type":"Full time","Job_Opening_Name":"2x iOS Developer - Murcia - Remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005135061/2x-iOS-Developer---Murcia---Remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for 2 Full Remote iOS Developers.  Our employer is looking for a Junior and Senior iOS Developer.","Publish":true,"Modified_Time":"2024-05-20T11:56:56+02:00","No_of_Candidates_Associated":3,"Job_Opening_ID":"ZR_552_JOB","Job_Description":"We are urgently looking for 2 Full Remote iOS Developers.  Our employer is looking for a Junior and Senior iOS Developer.  Candidates need to have a good level of English or willing to improve/learn. This position is only open for employees, who would like to work remote. Candidates need to be willing to go to the office in Murcia for 5 days on a quarterly base. Tasks and Responsibilities: ​ Design and develop software solutions to client requirements; Participate in identifying problem areas and defining solutions; Able to articulate problems and solutions in non-technical language to stakeholders; Understand interactions and dependencies between software components; Support the product engineering lead(s) in project set up, execution and key ceremonies including backlog refinement, sprint planning, demos and retrospectives; Support learning and development activities for junior product engineering resources; Profile: College / university degree, Bacc. Ing. Comp (or similar); +3 years of mobile development experience using iOS frameworks such as Core Data, Cocoa Touch etc; +5 years of software development experience; Strong understanding of Apple’s design principles & interface guidelines; Experience with MVVM, MVC & Viper architecture; Experience with offline storage, threading and performance tuning; Familiar with RESTFUL APIs, cloud message APIs and notifications; Knowledge of RxSwift, Core Animation, Core Location; Experience with automated build and test; Familiar with GIT, Jenkins and other CI/CD development environments; Experience of working in scrum / sprint teams using agile ways of working including knowledge of JIRA / ADO; Candidates need to have a good level of English and/or willing to improve/learn; Technologies: iOS Frameworks (Core Data, Cocoa Touch etc.), Core Animation, Core Location, MVVM, MVC, Viper, Restful API, RxSwift, Swift, UIKit Offered: Attractive salary package (employees); Career development training; English classes; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"6x Front-End JavaScript / React Developer - Remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:24:31+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005135001","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["JavaScript"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-04-20T12:23:00+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"4-5 years","Job_Type":"Full time","Job_Opening_Name":"6x Front-End JavaScript / React Developer - Remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005135001/6x-Front-End-JavaScript-React-Developer---Remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Full Remote Front-End JavaScript / React Developer.","Publish":true,"Modified_Time":"2024-03-15T14:03:21+01:00","No_of_Candidates_Associated":41,"Job_Opening_ID":"ZR_551_JOB","Job_Description":"We are urgently looking for a Full Remote Front-End JavaScript / React Developer. Our employer is looking for Junior, Medior and Senior Front-End JavaScript/React Developers.  Candidates need to have a good level of English or willing to improve/learn. This position is only open for employees who would like to work remote. Candidates need to be willing to go to the office in Murcia for 5 days on a quarterly base. Tasks and Responsibilities: Design and develop software solutions to client requirements using efficient, reusable and reliable code; Participate in identifying problem areas and defining solutions, able to articulate problems and solutions in non-technical language to stakeholders; Understand interactions and dependencies between software components; Support the product engineering lead(s) in project set up, execution and key ceremonies including backlog refinement, sprint planning, demos and retrospectives; Support learning and development activities for junior product engineering resources; Profile: College / university degree, Bacc. Ing. Comp (or similar through experience); +3 years of experience with Front-End technologies; Angular, React and Vue.js, using JavaScript, HTML 5, CSS preprocessors (LESS/SASS); Experience of using ES6/ES7 features such as arrow functions, promises and observables Knowledge of object-oriented PHP programming; Knowledge of CI/CD frameworks and tooling, e.g. GIT, Jenkins etc; Experience of working in scrum / sprint teams using agile ways of working including knowledge of JIRA / ADO; Candidates need to have a good level of English or willing to improve/learn; Offered: ​ Attractive salary package (employees); Career development training; English classes; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"4x Full-Stack Java Developer - Murcia - Full Remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:24:43+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005132001","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-04-20T11:46:17+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"4-5 years","Job_Type":"Full time","Job_Opening_Name":"4x Full-Stack Java Developer - Murcia - Full Remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005132001/4x-Full-Stack-Java-Developer---Murcia---Full-Remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for 4 Full remote Full-Stack Java Developer. Our employer is looking for Junior, Medior and Senior Java Developers.","Publish":true,"Modified_Time":"2024-04-22T17:34:42+02:00","No_of_Candidates_Associated":9,"Job_Opening_ID":"ZR_550_JOB","Job_Description":"We are urgently looking for 4 Full remote Full-Stack Java Developer. Our employer is looking for Junior, Medior and Senior Java Developers.  Candidates need to have a good level of English or willing to improve/learn. This position is remote and long-term. Candidates need to be willing to go to the office in Murcia for 5 days on a quarterly base. Tasks and Responsibilities: Develop software solutions to client requirements using efficient, reusable, and reliable code; Understand interactions and dependencies between software components; Work as part of an agile team participating in pair programming, code reviews and sprint ceremonies including backlog refinement, sprint planning, demos, and retrospectives. Support project governance by fully documenting solutions and fixes; Work with a range of containerised cloud technologies to provide best in class solutions; Profile: College / university degree, Bacc. Ing. Comp (or similar through experience); Experience in Java stack (Java, Spring, ) on commercial projects; Front-end experience using Angular / React; Experience with writing and maintaining high volume servers / services; Experience with microservices architecture; Familiar with API frameworks; In-depth knowledge of ., Angular, React and Nodejs; Familiar with GIT best practises; Familiar with the use of JIRA / ADO for backlog and problem management; Experience of working in scrum / sprint teams using agile ways of working; Candidates need to have a good level of English or willing to improve/learn; Offered: ​ Attractive salary package (employees); Career development training; English classes; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java Developer @ European Institutions – Brussels – Relocation package - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:24:53+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":"1000","id":"609729000005044081","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":false,"Created_Time":"2022-04-12T13:59:57+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":"Bruxelles","Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java Developer @ European Institutions – Brussels – Relocation package - Contractor","Number_of_Positions":"1","State":"Bruxelles-Capitale","Country_2":null,"Country":"Belgium","Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005044081/Senior-Java-Developer-European-Institutions-–-Brussels-–-Relocation-package---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"We are urgently looking for a Senior Java Developer for the European Institutions in Brussels, Belgium.","Publish":true,"Modified_Time":"2024-05-24T09:01:31+02:00","No_of_Candidates_Associated":12,"Job_Opening_ID":"ZR_549_JOB","Job_Description":"We are urgently looking for a Senior Java Developer for the European Institutions in Brussels, Belgium. The European Institutions in Brussels are looking for Java talent in Europe. Travel is not required for the interviews. The start could be in remote and/or relocation as soon as the Corona crisis allows it. EU candidates are welcome to apply. Candidates need to be willing to relocate. A work permit is required. This position is open for contractors and employees. Candidates need to be fluent in English. As a job abroad is a big step and we know it, what can you expect of us? ALL EUROPEAN CAREERS will support and advise you during the whole procedure (assistance with finding an apartment, where to register, opening a bank account, how to request child allowance, etc.) and provide a relocation package. Tasks and Responsibilities: Design and development of components and building blocks; Analysis of the integration of different information systems; Data analysis and data modeling; Coordination of the implementation of the technical architecture; Participation in technical working groups, progress meetings, and meetings with the users; Definition of testing needs and assistance in the testing; Assistance during relevant parts of testing, analysis, technical documentation, deployment, evaluation, and reporting; Profile: Bachelor or Master degree; +5/+10/+15 years of Java development experience; Good knowledge of Spring; Good knowledge of Hibernate; Fluent in English; Interested: If you are interested in this opportunity, please forward your CV to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java/Kubernetes Developer - Full remote - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:28:26+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005014106","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-04-08T15:21:49+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java/Kubernetes Developer - Full remote - Contractor","Number_of_Positions":"1","State":null,"Country_2":"Sri Lanka","Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005014106/Senior-Java-Kubernetes-Developer---Full-remote---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international institution based in The Hague (Den Haag, Netherlands), we are looking for a Senior Java Developer with Cloud and Kubernetes experience/knowledge.","Publish":true,"Modified_Time":"2023-12-13T11:28:26+01:00","No_of_Candidates_Associated":10,"Job_Opening_ID":"ZR_534_JOB","Job_Description":"For an international institution based in The Hague (Den Haag, Netherlands), we are looking for a Senior Java Developer with Cloud and Kubernetes experience/knowledge. As a Developer, you will become part of a bigger service, composed of Project Managers, Business Analysts, Solution Architects, and Testers to reinforce this growing team. Candidates need to be fluent in English. A work permit is required as occasional travel is required. This position is also open for employees, who would like to commit long-term. Tasks and responsibilities Development and test technical environment based on Java technologies such as Wildfly, Java EE, Spring, Apache, Hibernate, JCR, Mule, MySQL CE, and Oracle DB but also modern technologies based on cloud-native application architectures; Microservice architectures deployed through containers in the service mesh on the Kubernetes platform; Develop applications and tools under the guidance and close cooperation with the solution architects; Profile +5 years of Java Development experience; Experience with software development in a Kubernetes-based infrastructure, networking policies, LBs, deployment strategies, and cluster security; Experience with cloud deployments, DevOps, and infrastructure engineering; Experience with Linux and MS Windows-based systems; Cloud automation and infrastructure provisioning; CI/CD pipeline building tools (git, maven, Jenkins); Ability to write Dockerfiles, Jenkinsfiles, and Helm charts; Experience with React user interface development; Fluent in English; Offered ​ A challenging role for an international organization; Attractive salary package or contractor rate; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java/Kubernetes Developer - Full remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:28:38+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005014058","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-04-08T15:17:19+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Java/Kubernetes Developer - Full remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005014058/Senior-Java-Kubernetes-Developer---Full-remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For an international institution based in The Hague (Den Haag, Netherlands), we are looking for a Senior Java Developer with Cloud and Kubernetes experience/knowledge.","Publish":true,"Modified_Time":"2024-04-22T17:34:31+02:00","No_of_Candidates_Associated":4,"Job_Opening_ID":"ZR_533_JOB","Job_Description":"For an international institution based in The Hague (Den Haag, Netherlands), we are looking for a Senior Java Developer with Cloud and Kubernetes experience/knowledge. As a Developer, you will become part of a bigger service, composed of Project Managers, Business Analysts, Solution Architects, and Testers to reinforce this growing team. Candidates need to be fluent in English. A work permit is required as occasional travel is required. This position is also open for employees, who would like to commit long-term. Tasks and responsibilities Development and test technical environment based on Java technologies such as Wildfly, Java EE, Spring, Apache, Hibernate, JCR, Mule, MySQL CE, and Oracle DB but also modern technologies based on cloud-native application architectures; Microservice architectures deployed through containers in the service mesh on the Kubernetes platform; Develop applications and tools under the guidance and close cooperation with the solution architects; Profile +5 years of Java Development experience; Experience with software development in a Kubernetes-based infrastructure, networking policies, LBs, deployment strategies, and cluster security; Experience with cloud deployments, DevOps, and infrastructure engineering; Experience with Linux and MS Windows-based systems; Cloud automation and infrastructure provisioning; CI/CD pipeline building tools (git, maven, Jenkins); Ability to write Dockerfiles, Jenkinsfiles, and Helm charts; Experience with React user interface development; Fluent in English; Offered A challenging role for an international organization; Attractive salary package or contractor rate; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java/React Developer - Full remote - Contractor","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:28:49+01:00","Industry":"IT Services","Contractor":true,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005003117","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-04-07T13:05:29+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Contract","Job_Opening_Name":"Senior Java/React Developer - Full remote - Contractor","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005003117/Senior-Java-React-Developer---Full-remote---Contractor?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For a European Institution in The Hague, we are currently looking for a Senior Java Developer with React knowledge/experience.","Publish":true,"Modified_Time":"2024-04-22T08:14:46+02:00","No_of_Candidates_Associated":14,"Job_Opening_ID":"ZR_532_JOB","Job_Description":"For a European Institution in The Hague, we are currently looking for a Senior Java Developer with React knowledge/experience. Candidates need to be fluent in English. A work permit is required as occasional travel is required. This position is also open for contractors, who would like to commit long-term. Tasks and responsibilities: Software developed and adapt the white version, performing all Activities and providing all Deliverables; Provide local technical support to the NPO for the execution of the pilot and implementation of FO solutions; To prepare An application for mobility purposes of reviewing, sharing, and editing documents in a collaboration mode; To collaborate with Front services; Profile: +5 years of experience in these tools Wildfly, Java EE, React, Spring, OpenAPI, REST, JSON, MongoDB, SQL, Microservices, Docker, Kubernetes, GCP, React, and Camunda; Experience with Front end coding such as Java, Spring Boot; Experience with the implementation, configuration, adaptation, and roll-out of software solutions; Experience with data storage/manipulation such as: JSON, JsonSchema, XML, XSLT, DTD, SQL, PDF; Experience with APIs such as REST, OpenAPI, CMIS, STOMP; Experience with cluster security and security protocols such as OAuth2 / OpenID Connect, TLS, PKCS; Experience with Microservices, Docker, Kubernetes, GCP; Fluent in English; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"},{"$currency_symbol":"EUR","Posting_Title":"Senior Java/React Developer - Full remote","Account_Manager":{"name":"All European Careers","id":"609729000000322003"},"Target_Date":null,"Required_Skills":null,"Last_Activity_Time":"2023-12-13T11:28:59+01:00","Industry":"IT Services","Contractor":false,"$state":"save","$process_flow":false,"Zip_Code":null,"id":"609729000005003065","Department_Name":{"name":"BE Consultancy","id":"609729000004595026"},"$approved":true,"Tags":["Java"],"Date_Opened":"2023-12-13","$approval":{"delegate":false,"approve":false,"reject":false,"resubmit":false},"Remote_Job":true,"Created_Time":"2022-04-07T12:58:15+02:00","$followed":false,"$editable":true,"Is_Locked":false,"City":null,"Job_Opening_Status":"In-progress","Associated_Tags":[],"Assigned_Recruiter":[],"Work_Experience":"5+ years","Job_Type":"Full time","Job_Opening_Name":"Senior Java/React Developer - Full remote","Number_of_Positions":"1","State":null,"Country_2":null,"Country":null,"Region":"Europe","Created_By":{"name":"All European Careers","id":"609729000000322003"},"Country_3":null,"Is_Attachment_Present":false,"Keep_on_Career_Site":false,"Salary":null,"Assigned_Recruiters":[],"Featured":false,"Url":"https://be-consultancy-group.zohorecruit.com/jobs/Careers/609729000005003065/Senior-Java-React-Developer---Full-remote?source=CareerSite","No_of_Candidates_Hired":0,"Modified_By":{"name":"All European Careers","id":"609729000000322003"},"Is_Hot_Job_Opening":false,"Job_Sum_up":"For a European Institution in The Hague, we are currently looking for a Senior Java Developer with React knowledge/experience.","Publish":true,"Modified_Time":"2024-04-22T17:34:17+02:00","No_of_Candidates_Associated":5,"Job_Opening_ID":"ZR_531_JOB","Job_Description":"For a European Institution in The Hague, we are currently looking for a Senior Java Developer with React knowledge/experience. Candidates need to be fluent in English. A work permit is required as occasional travel is required. This position is also open for contractors, who would like to commit long-term. Tasks and responsibilities: Software developed and adapt the white version, performing all Activities and providing all Deliverables; Provide local technical support to the NPO for the execution of the pilot and implementation of FO solutions; To prepare An application for mobility purposes of reviewing, sharing, and editing documents in a collaboration mode; To collaborate with Front services; Profile: ​ +5 years of experience in these tools Wildfly, Java EE, React, Spring, OpenAPI, REST, JSON, MongoDB, SQL, Microservices, Docker, Kubernetes, GCP, React, and Camunda; Experience with Front end coding such as Java, Spring Boot; Experience with the implementation, configuration, adaptation, and roll-out of software solutions; Experience with data storage/manipulation such as: JSON, JsonSchema, XML, XSLT, DTD, SQL, PDF; Experience with APIs such as REST, OpenAPI, CMIS, STOMP; Experience with cluster security and security protocols such as OAuth2 / OpenID Connect, TLS, PKCS; Experience with Microservices, Docker, Kubernetes, GCP; Fluent in English; Interested: Please send your resume to resume@all-european-careers.com","$approval_state":"approved"}]","status":200,"url":"https://capable-pudding-4d924f.netlify.app/api/all"},"revalidate":3600,"tags":[]}